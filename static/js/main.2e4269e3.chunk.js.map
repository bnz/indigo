{"version":3,"sources":["jsx/Game/GameResults/GameResults.module.css","jsx/Components/Button/Button.module.css","jsx/Game/Seats/Seats.module.css","jsx/Game/TileActions/TileActions.module.css","jsx/Rules/Rules.module.css","jsx/Components/Dialog/Dialog.module.css","jsx/Layout/Drawer/Drawer.module.css","jsx/Layout/Drawer/GamesSwitcher/GamesSwitcher.module.css","jsx/Players/PlayerManager.module.css","jsx/Game/Sphere/Sphere.module.css","jsx/Players/Player.module.css","jsx/Layout/Drawer/ThemeSwitcher/ThemeSwitcher.module.css","jsx/Layout/Drawer/RotateLayout/RotateLayout.module.css","jsx/Game/Stone/Stone.module.css","jsx/Game/GatewaySeats/GatewaySeats.module.css","jsx/Game/Tile/TileHovered.module.css","jsx/Layout/MenuButton/MenuButton.module.css","jsx/Rules/StonesWrapper.module.css","jsx/Layout/LayoutWrapper/LayoutWrapper.module.css","jsx/Layout/Drawer/LanguageSwitcher/LanguageSwitcher.module.css","jsx/Layout/Drawer/Footer/Footer.module.css","types.tsx","Storage/LocalStorageMgmnt.ts","Storage/GamePhaseStore/GamePhaseStore.ts","Storage/UIStore/UIStore.ts","jsx/Game/Sphere/Sphere.tsx","jsx/Rules/StonesWrapper.tsx","Storage/Store/StoreProvider.tsx","jsx/Game/Hexagons/Hex.ts","Storage/Store/applyers/toHex.ts","jsx/Game/Hexagons/Orientation.ts","jsx/Game/Hexagons/Point.ts","jsx/Game/Hexagons/Layout.ts","Storage/Store/applyers/renderLayout.ts","Storage/Store/applyers/getTransformCSS.ts","Storage/Store/maps/stoneAngleMap.ts","Storage/Store/applyers/edgeToShiftMap.ts","Storage/Store/applyers/getRotate.ts","jsx/Game/Stone/useStoneStyles.tsx","jsx/Game/Stone/Stone.tsx","i18n/i18n.tsx","i18n/rus.ts","i18n/eng.ts","Storage/UIStore/UIStoreProvider.tsx","jsx/Rules/StartButton.tsx","jsx/Rules/Intro.tsx","Storage/PlayersStore/applyers/generateFirstTwoPlayers.ts","jsx/Game/Sphere/assets/purple.svg","jsx/Game/Sphere/assets/turquoise.svg","jsx/Game/Sphere/assets/coral.svg","jsx/Game/Sphere/assets/white.svg","Storage/PlayersStore/PlayersStore.ts","helpers/arrayDiff.ts","Storage/PlayersStore/applyers/savePlayers.ts","Storage/PlayersStore/applyers/addPlayer.ts","Storage/PlayersStore/applyers/removePlayerById.ts","jsx/Players/PlayerManager.tsx","Storage/Store/applyers/onMouseMove.ts","Storage/Store/applyers/playerMoveTile.ts","helpers/random.ts","Storage/Store/applyers/randAngle.ts","Storage/Store/maps/TileNameToAngle.ts","Storage/Store/applyers/getRandomTile.ts","Storage/Store/maps/routeTileIdToEdgeMap.ts","Storage/Store/maps/treasureTileIdToEdgeMap.ts","Storage/Store/applyers/moveStones.ts","Storage/Store/applyers/applySit.ts","Storage/Store/applyers/nextMove.ts","Storage/Store/applyers/saveTiles.ts","jsx/Game/Arena/ArenaWrapper.tsx","assets/hex.svg","jsx/Game/Tile/Tile.tsx","jsx/Game/Tile/Tiles.tsx","Storage/Store/applyers/rotate.ts","Storage/Store/applyers/cssBgUrl.ts","Storage/Store/applyers/playerMoveRouteTile.ts","helpers/calcScore.ts","jsx/Game/Seats/Seat.tsx","jsx/Game/Seats/Seats.tsx","Storage/Store/applyers/getGateway.ts","jsx/Game/GatewaySeats/GatewaySeats.tsx","jsx/Components/KeyboardActions/KeyboardActions.ts","Storage/Store/applyers/cancelPreSit.ts","jsx/Game/Tile/KeyCode.tsx","Storage/Store/applyers/tileHoveredCSS.ts","jsx/Game/Tile/TileHovered.tsx","jsx/Game/Stones/Stones.tsx","Storage/Store/applyers/tileActionsPositionCSS.ts","jsx/Game/TileActions/TileActions.tsx","Storage/Store/applyers/recalc.ts","Storage/Store/applyers/updateLayout.ts","Storage/Store/applyers/changeOrientation.ts","jsx/Game/Arena/Actions.tsx","jsx/Components/Modal/Modal.ts","jsx/Components/Dialog/Dialog.tsx","jsx/Layout/Drawer/RestartGame/RestartButton.tsx","jsx/Layout/Drawer/RestartGame/RestartGame.tsx","jsx/Game/GameResults/GameResults.tsx","jsx/Game/Arena/Arena.tsx","jsx/Game/Indigo.tsx","Storage/Store/applyers/onWindowResize.ts","Storage/Store/applyers/generateLeftTiles.ts","helpers/shuffle.ts","Storage/Store/applyers/generateTiles.ts","Storage/Store/defaults/treasures.ts","Storage/Store/defaults/routes.ts","Storage/Store/applyers/getStoneProps.ts","Storage/Store/defaults/stones.ts","Storage/Store/constants/gateways.ts","Storage/Store/applyers/init.ts","Storage/Store/constants/gates.ts","Storage/Store/Store.ts","helpers/debounce.ts","jsx/Layout/LayoutWrapper/LayoutWrapper.tsx","jsx/Layout/Drawer/GamesSwitcher/GamesSwitcher.tsx","jsx/Layout/Drawer/LanguageSwitcher/LanguageSwitcher.tsx","jsx/Layout/Drawer/Footer/Footer.tsx","jsx/Layout/Drawer/ThemeSwitcher/ThemeSwitcher.tsx","jsx/Layout/Drawer/RotateLayout/RotateLayout.tsx","Storage/Store/applyers/tileCountByName.ts","jsx/Rules/Rules.tsx","jsx/Layout/Drawer/Drawer.tsx","jsx/Layout/MenuButton/MenuButton.tsx","index.tsx"],"names":["module","exports","PlayerId","PlayerColors","UIPhase","TreasureTiles","GatewayTiles","TileName2","HexType","RouteTiles","LocalStorageMgmnt","storageName","key","fallback","data","localStorage","getItem","this","d","JSON","parse","undefined","callback","get","res","set","value","setItem","stringify","console","log","removeItem","StoneId","StoneType","AllTiles","GamePhaseStore","storage","_phase","getOrApply","PRE_GAME","goToPreGame","phase","destroy","goToPlayersSelection","PLAYERS_SELECTION","startGame","GAME","makeAutoObservable","UIStore","storeDispose","defaultDrawerState","defaultLanguage","html","document","getElementsByTagName","gamePhase","restartGame","drawer","body","classList","remove","_drawer","closeDrawer","toggleDrawer","drawerReaction","flag","style","overflow","_language","setLanguage","language","window","location","matchMediaListener","e","theme","toggleTheme","_theme","matchMedia","changeTheme","runInAction","themeReaction","add","reaction","addEventListener","removeEventListener","matches","Sphere","color","alt","className","cx","wrapper","StonesWrapper","children","styles","wrap","HexContext","createContext","StoreProvider","store","useEffect","dispose","Provider","useStore","useContext","Error","Hex","q","r","s","Math","round","b","k","direction","diagonals","abs","subtract","len","qi","ri","si","q_diff","r_diff","s_diff","t","N","distance","a_nudge","b_nudge","results","step","max","i","push","lerp","directions","toHex","Orientation","f0","f1","f2","f3","b0","b1","b2","b3","start_angle","Point","x","y","Layout","orientation","size","origin","h","M","p","pt","corner","angle","PI","cos","sin","corners","center","hexToPixel","offset","hexCornerOffset","pointy","sqrt","flat","renderLayout","orientationType","largeSide","smallSide","getTransformCSS","x1","y1","r1","transform","ratio","join","stoneAngleMap","sapphire","emerald","amber","edgeToShiftMap","type","isPointy","edge","rotate","getRotate","useStoneStyles","id","stones","isOut","StoneC","index","root","Stone","observer","isStatic","lang","languagesMap","rus","yacht","indigo","systemTheme","currentGameWillBeLost","winner","eng","i18n","Context","UIStoreProvider","useUIStore","StartButton","height","display","justifyContent","alignItems","buttonStyles","main","onClick","Intro","players","Player1","Player2","Player3","Player4","emerald0","amber0","fontStyle","textAlign","margin","button","playerInitData","generateFirstTwoPlayers","playerIdToSVGMap","purple","turquoise","coral","white","PlayersStore","gateways","init","storageKey","generatePlayersGateways","findGatewayOwnerId","tileId","edgeFrom","find","addStoneToPlayer","stoneId","playerId","findIndex","length","error","stonesCount","map","indexOf","Object","entries","ids","keys","parseInt","split","maxPlayersCount","savePlayers","addPlayer","array1","array2","filter","includes","removePlayerById","splice","PlayerManager","uiStore","playersWrapper","playersStore","clear","playerStyles","actionsWrapper","cancelButton","startGameButton","playerMoveReaction","onMouseMove","preSit","rect","currentTarget","getBoundingClientRect","hex","layout","pixelToHex","pageX","pageY","tiles","route","tile","hoveredId","getPlayerMoveTile","move","playerMove","isRouteCrossroad","getRandomInt","min","floor","random","randAngle","tileNameToAngle","c","l","getRandomTile","leftTiles","pop","routeTileIdToEdgeMap","treasureTileIdToEdgeMap","getOppositeCorner","sleep","ms","Promise","resolve","setTimeout","Klass","path","run","neighbor","treasure","routeTile","edgeTo","cacheAndRun","gateway","a","applySit","name","nextAngle","newRouteTile","moveStones","nextKey","nextMove","routeTiles","treasureTiles","forEach","arr","saveTiles","gameResultsOpen","applySitButton","stopPropagation","ArenaWrapper","arenaRef","useRef","arenaElement","current","ref","useMemo","onDoubleClick","R","E","backgroundColor","borderRadius","position","fontSize","padding","lineHeight","Tile","qr","backgroundImage","svg","top","left","right","bottom","Tiles","entry","rotateBack","nextRotateAngle","rotateAngle","savedNextAngle","angles","angl","firstAngle","lastAngle","rotateLeft","rotateLeftButton","rotateRight","rotateRightButton","cssBgUrl","url","playerMoveRouteTile","calcScore","reduce","prev","curr","Seat","playerClass","score","stone","Seats","player","item","getGateway","gates","GatewaySeats","KeyboardActions","actions","fn","code","cancelPreSit","cancelPreSitButton","KeyCode","useActions","Escape","ArrowLeft","ArrowRight","Enter","Space","NumpadEnter","tileHoveredCSS","TileHovered","show","hide","Stones","tileActionsPositionCSS","TileActions","isCrossroad","container","inner","apply","cancel","recalc","widthSize","heightSize","width","updateLayout","changeOrientation","elSizes","Actions","KeyR","getElementById","Modal","el","createElement","div","appendChild","removeChild","createPortal","Dialog","heading","close","footer","noPadding","backdrop","header","closeButton","content","RestartButton","restart","RestartGame","useState","dialogVisible","setDialogVisible","useCallback","text","GameResults","sphereWrap","seatsStyles","stonesWrap","othersWrap","otherSphere","otherScore","otherStones","stoneAlt","Arena","Wrapper","maxWidth","Indigo","onWindowResize","leftTilesInitialSet","generateLeftTiles","array","temporaryValue","randomIndex","currentIndex","shuffle","concat","count","Array","fill","generateTiles","treasures","amber1","amber2","amber3","amber4","amber5","routes","getStoneProps","treasureIndex","emerald1","emerald2","emerald3","emerald4","Store","debounce","warn","_playerMove","str","_arenaElement","func","wait","timeout","args","context","later","clearTimeout","_orientation","offsetWidth","offsetHeight","values","leadingPlayer","LayoutWrapper","GamesSwitcher","visible","setVisible","open","list","selected","LanguageSwitcher","disabled","Footer","Date","getFullYear","ThemeSwitcher","th","RotateLayout","tileCountByName","tileName","Rules","stonesGrid","tilesGrid","marginTop","marginBottom","Drawer","hidden","rulesContainer","MenuButton","closeMenu","openMenu","render"],"mappings":"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","file":"static/js/main.2e4269e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"GameResults_backdrop__yJbQK\",\"container\":\"GameResults_container__gacLg\",\"p-1\":\"GameResults_p-1__35bh3\",\"p-2\":\"GameResults_p-2__3DMLH\",\"p-3\":\"GameResults_p-3__2_xfN\",\"p-4\":\"GameResults_p-4__baI7M\",\"wrap\":\"GameResults_wrap__3XMNa\",\"sphereWrap\":\"GameResults_sphereWrap__36mIk\",\"score\":\"GameResults_score__3Lpm3\",\"stonesWrap\":\"GameResults_stonesWrap__1rtEF\",\"stone\":\"GameResults_stone__3L0um\",\"stoneAlt\":\"GameResults_stoneAlt__27FFK\",\"othersWrap\":\"GameResults_othersWrap__18Dnv\",\"otherSphere\":\"GameResults_otherSphere__1Jm26\",\"otherScore\":\"GameResults_otherScore__2HchY\",\"otherStones\":\"GameResults_otherStones__3UwHL\",\"actions\":\"GameResults_actions__1GX7-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3tE03\",\"withIcon\":\"Button_withIcon__3mxLj\",\"buttonContained\":\"Button_buttonContained__1_qjk\",\"main\":\"Button_main__xrucu Button_button__3tE03 Button_buttonContained__1_qjk\",\"text\":\"Button_text__1-Elw Button_button__3tE03\",\"restart\":\"Button_restart__18J1J Button_button__3tE03 Button_buttonContained__1_qjk Button_withIcon__3mxLj\",\"rotate\":\"Button_rotate__36yKG Button_button__3tE03 Button_buttonContained__1_qjk Button_withIcon__3mxLj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Seats_item__1IPfu\",\"p-1\":\"Seats_p-1__MO2Vn\",\"p-2\":\"Seats_p-2__20Uja\",\"p-3\":\"Seats_p-3__1Av78\",\"p-4\":\"Seats_p-4__12rnV\",\"hex\":\"Seats_hex__2Lbbt\",\"score\":\"Seats_score__3ZYTz\",\"stone\":\"Seats_stone__21OMB\",\"s-1\":\"Seats_s-1__3FKuc\",\"s-2\":\"Seats_s-2__3zqzy\",\"s-3\":\"Seats_s-3__1g-wu\",\"s-4\":\"Seats_s-4__1k907\",\"s-5\":\"Seats_s-5__2kFSa\",\"s-6\":\"Seats_s-6__HQg_n\",\"s-7\":\"Seats_s-7__1I4T_\",\"s-8\":\"Seats_s-8__129iE\",\"s-9\":\"Seats_s-9__3jKOK\",\"s-10\":\"Seats_s-10__3xQMJ\",\"s-11\":\"Seats_s-11__3uJCt\",\"s-12\":\"Seats_s-12__1rkLu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TileActions_root__tcFP7\",\"container\":\"TileActions_container__30C8n\",\"inner\":\"TileActions_inner__2RM6i\",\"button\":\"TileActions_button__1M8Im Button_button__3tE03 Button_buttonContained__1_qjk Button_withIcon__3mxLj\",\"apply\":\"TileActions_apply__tbz51 TileActions_button__1M8Im Button_button__3tE03 Button_buttonContained__1_qjk Button_withIcon__3mxLj\",\"cancel\":\"TileActions_cancel__3oOhv TileActions_button__1M8Im Button_button__3tE03 Button_buttonContained__1_qjk Button_withIcon__3mxLj\",\"left\":\"TileActions_left__2uLiu TileActions_button__1M8Im Button_button__3tE03 Button_buttonContained__1_qjk Button_withIcon__3mxLj\",\"right\":\"TileActions_right__2Lpkt TileActions_button__1M8Im Button_button__3tE03 Button_buttonContained__1_qjk Button_withIcon__3mxLj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Rules_root__3otPK\",\"players\":\"Rules_players__1e7kQ\",\"stonesGrid\":\"Rules_stonesGrid__2rwYr\",\"tilesGrid\":\"Rules_tilesGrid__b4vlY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dialog_root__NRShG\",\"backdrop\":\"Dialog_backdrop__1sYxI\",\"header\":\"Dialog_header__1azbN\",\"content\":\"Dialog_content__2meVV\",\"closeButton\":\"Dialog_closeButton__1r6o3 Button_button__3tE03\",\"footer\":\"Dialog_footer__YAeCI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"drawer\":\"Drawer_drawer__1HalH\",\"hidden\":\"Drawer_hidden__2OHcw\",\"backdrop\":\"Drawer_backdrop__gWGnm\",\"content\":\"Drawer_content__1bryE\",\"box\":\"Drawer_box__3GC_l\",\"actions\":\"Drawer_actions__BAzI9 Drawer_box__3GC_l\",\"rulesContainer\":\"Drawer_rulesContainer__1QPZh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"GamesSwitcher_root__2TNDL\",\"heading\":\"GamesSwitcher_heading__3SrOO\",\"list\":\"GamesSwitcher_list__3Qw2k\",\"visible\":\"GamesSwitcher_visible__YBiVK\",\"selected\":\"GamesSwitcher_selected__1NZF7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playersWrapper\":\"PlayerManager_playersWrapper__1PuPR\",\"actionsWrapper\":\"PlayerManager_actionsWrapper__1pDi0\",\"startGameButton\":\"PlayerManager_startGameButton__39b4Y Button_main__xrucu Button_button__3tE03 Button_buttonContained__1_qjk Button_withIcon__3mxLj\",\"cancelButton\":\"PlayerManager_cancelButton__2gzJ9 Button_text__1-Elw Button_button__3tE03 Button_withIcon__3mxLj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Sphere_wrapper__ho5AN\",\"alt\":\"Sphere_alt__3fIw7\",\"p-1\":\"Sphere_p-1__2hEYT\",\"p-2\":\"Sphere_p-2__Ms9Z8\",\"p-3\":\"Sphere_p-3__Gcg32\",\"p-4\":\"Sphere_p-4__1DBs_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Player_root__36CGP\",\"clear\":\"Player_clear__ExF0g\",\"add\":\"Player_add__1GVN9 Player_root__36CGP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ThemeSwitcher_wrapper__3sSiZ Drawer_box__3GC_l\",\"radio\":\"ThemeSwitcher_radio__3y2yU\",\"selected\":\"ThemeSwitcher_selected__2r8Ri\",\"light\":\"ThemeSwitcher_light__9R655 ThemeSwitcher_radio__3y2yU\",\"dark\":\"ThemeSwitcher_dark__BaMnY ThemeSwitcher_radio__3y2yU\",\"system\":\"ThemeSwitcher_system__3Z_ku ThemeSwitcher_radio__3y2yU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"RotateLayout_wrap__3_K_f Drawer_box__3GC_l\",\"button\":\"RotateLayout_button__22b1Q\",\"flat\":\"RotateLayout_flat__2_vBD RotateLayout_button__22b1Q\",\"pointy\":\"RotateLayout_pointy__wCgqC RotateLayout_button__22b1Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Stone_root__MfrYg\",\"sapphire\":\"Stone_sapphire__3BQp_\",\"emerald\":\"Stone_emerald__j36Bq\",\"amber\":\"Stone_amber__25e05\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"GatewaySeats_item__qNU3V\",\"g-1\":\"GatewaySeats_g-1__2i5Sv\",\"g-2\":\"GatewaySeats_g-2__2_Cyz\",\"g-3\":\"GatewaySeats_g-3__1LWZR\",\"g-4\":\"GatewaySeats_g-4__1OBbH\",\"g-5\":\"GatewaySeats_g-5__2J2ev\",\"g-6\":\"GatewaySeats_g-6__3gIG9\",\"g-7\":\"GatewaySeats_g-7__bI9We\",\"g-8\":\"GatewaySeats_g-8__3xQ3e\",\"g-9\":\"GatewaySeats_g-9__1J5z9\",\"g-10\":\"GatewaySeats_g-10__WMnpF\",\"g-11\":\"GatewaySeats_g-11__3rLxp\",\"g-12\":\"GatewaySeats_g-12__ICQcn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"show\":\"TileHovered_show__2yvY4\",\"hide\":\"TileHovered_hide__oJ-nm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MenuButton_root__2p-DT\",\"openMenu\":\"MenuButton_openMenu__2T0Q7 MenuButton_root__2p-DT\",\"closeMenu\":\"MenuButton_closeMenu__1zqK3 MenuButton_root__2p-DT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"StonesWrapper_wrap__2XO5t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LayoutWrapper_root__3zr9z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LanguageSwitcher_root__3Mev9 Drawer_box__3GC_l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1_tAb\"};","import { Hex } from \"./jsx/Game/Hexagons/Hex\"\n\nexport type Keys =\n    | \"orientation\"\n    | \"player-move\"\n    | \"players\"\n    | \"players-gateways\"\n    | \"route-tiles\"\n    | \"treasure-tiles\"\n    | \"tiles-left\"\n    | \"stones\"\n\nexport type Values =\n    | OrientationType\n    | PlayerMove\n    | Players\n    | SavedTilesValue[]\n    | TileName[]\n    | Stones\n    | PlayersGateways\n\nexport enum PlayerId {\n    Player1 = \"p-1\",\n    Player2 = \"p-2\",\n    Player3 = \"p-3\",\n    Player4 = \"p-4\",\n}\n\nexport interface Player {\n    id: PlayerId\n    stones: StoneId[]\n}\n\nexport type Players = Player[]\n\ntype Dictionary<K extends string, T> = { [P in K]?: T }\n\nexport type PlayersGateways = Dictionary<PlayerId, [tileID: string, edge: Edge][]>\n\nexport enum PlayerColors {\n    Player1 = \"#ffbe37\",\n    Player2 = \"#388e3c\",\n    Player3 = \"#e6ebf0\",\n    Player4 = \"#ff6955\",\n}\n\nexport enum UIPhase {\n    PRE_GAME,\n    PLAYERS_SELECTION,\n    GAME,\n}\n\nexport type PlayerMove = [\n    /* 0 */ playerId: PlayerId,\n    /* 1 */ tileName?: TileName,\n    /* 2 */ angle?: Angle,\n    /* 3 */ rotationAngle?: number,\n    /* 4 */ nextAngle?: Angle,\n]\n\nexport type OrientationType = \"flat\" | \"pointy\"\n\nexport enum TreasureTiles {\n    \"center\",\n    \"tr-b\",\n    \"tr-b-l\",\n    \"tr-b-r\",\n    \"tr-t\",\n    \"tr-t-l\",\n    \"tr-t-r\",\n}\n\nexport enum GatewayTiles {\n    \"le-t\" = 7,\n    \"le-b\",\n    \"le-l-t\",\n    \"le-l-b\",\n    \"le-r-b\",\n    \"le-r-t\",\n    \"g-l\",\n    \"g-t-l\",\n    \"g-t-r\",\n    \"g-r\",\n    \"g-b-r\",\n    \"g-b-l\",\n}\n\nexport type Tiles = Record<string, Tile>\n\ntype StoneWithEdge = [stoneId: StoneId, edge: Edge][]\n\nexport type SavedTilesValue = [Q: number, R: number, id?: number, stoneWithEdge?: StoneWithEdge]\nexport type SavedTiles = Record<string, SavedTilesValue>\n\nexport enum TileName2 {\n    S,\n    C,\n    T,\n    L,\n    H,\n}\n\nexport type TileName =\n    | \"s\"\n    | \"c\"\n    | \"t\"\n    | \"l\"\n    | \"h\"\n\nexport enum HexType {\n    decorator,\n    corner,\n    treasure,\n    route,\n    seat,\n    gateway,\n    center\n}\n\nexport type Angle = 0 | 60 | 120 | 180 | 240 | 300\n\nexport enum RouteTiles {\n    // CROSSROAD\n    c = 25,\n\n    // LIZARD\n    \"l-0\",\n    \"l-60\",\n    \"l-120\",\n\n    // HUMAN\n    \"h-0\",\n    \"h-60\",\n    \"h-120\",\n    \"h-180\",\n    \"h-240\",\n    \"h-300\",\n\n    // TURTLE\n    \"t-0\",\n    \"t-60\",\n    \"t-120\",\n\n    // SHURIKEN\n    \"s-0\",\n    \"s-60\",\n}\n\nexport const AllTiles = {\n    ...TreasureTiles,\n    ...GatewayTiles,\n    ...RouteTiles,\n}\n\nexport type IAllTiles = TreasureTiles | GatewayTiles | RouteTiles\n\nexport type TileItems<T> = [number, number, T?, StoneWithEdge?][]\n\nexport interface Tile {\n    hex: Hex\n    type: HexType\n    tile?: IAllTiles\n    stones?: StoneWithEdge\n    hovered?: boolean\n}\n\nexport enum StoneId {\n    sapphire = \"s\",\n    emerald0 = \"e0\",\n    emerald1 = \"e1\",\n    emerald2 = \"e2\",\n    emerald3 = \"e3\",\n    emerald4 = \"e4\",\n    amber0 = \"a0\",\n    amber1 = \"a1\",\n    amber2 = \"a2\",\n    amber3 = \"a3\",\n    amber4 = \"a4\",\n    amber5 = \"a5\",\n}\n\nexport enum StoneType {\n    sapphire,\n    emerald,\n    amber,\n}\n\nexport type Edge = 0 | 1 | 2 | 3 | 4 | 5\n\nexport type Stone = [type: StoneType, Q: number, R: number, edge: Edge, isOut?: boolean]\n\nexport type Stones = Record<StoneId, Stone>\n\nexport interface Data<T> {\n    data: T\n}\n","export interface iLocalStorageMgmnt<K, V> {\n    get(key: K, fallback?: V): any | null\n    set(key: K, value: V): void\n    getOrApply<T>(key: K, callback: () => T): T\n    destroy(): void\n}\n\nexport class LocalStorageMgmnt<K, V> implements iLocalStorageMgmnt<K, V> {\n\n    constructor(\n        private storageName: string,\n    ) {\n    }\n\n    get(key: K, fallback?: V) {\n        const data = localStorage.getItem(this.storageName)\n\n        if (data !== null) {\n            const d = JSON.parse(data)\n            return d[key] === undefined ? fallback || null : d[key]\n        }\n\n        return fallback || null\n    }\n\n    getOrApply<T>(key: K, callback: () => T): T {\n        if (this.get(key) !== null) {\n            return this.get(key)\n        }\n        const res = callback()\n        // @ts-ignore TODO\n        this.set(key, res)\n        return res\n    }\n\n    set(key: K, value: V) {\n        const data = localStorage.getItem(this.storageName)\n\n        if (data === null) {\n            localStorage.setItem(this.storageName, JSON.stringify({\n                // @ts-ignore FIXME\n                [key]: value,\n            }))\n        } else {\n            const d = JSON.parse(data)\n            d[key] = value\n            localStorage.setItem(this.storageName, JSON.stringify(d))\n        }\n    }\n\n    destroy() {\n        console.log(\"destroy\", this.storageName)\n        localStorage.removeItem(this.storageName)\n    }\n\n}\n","import { LocalStorageMgmnt } from \"../LocalStorageMgmnt\"\nimport { UIPhase } from \"../../types\"\nimport { makeAutoObservable } from \"mobx\"\nimport { UIKeys, UIValues } from \"../UIStore/UIStore\"\n\nexport class GamePhaseStore {\n\n    constructor(\n        private storage: LocalStorageMgmnt<UIKeys, UIValues>,\n    ) {\n        makeAutoObservable(this)\n    }\n\n    private _phase = this.storage.getOrApply<UIPhase>(\"phase\", () => UIPhase.PRE_GAME)\n\n    get phase() {\n        return this._phase\n    }\n\n    set phase(phase: UIPhase) {\n        this._phase = phase\n        this.storage.set(\"phase\", this._phase)\n    }\n\n    goToPreGame = () => {\n        this.phase = UIPhase.PRE_GAME\n        this.storage.destroy()\n    }\n\n    goToPlayersSelection = () => {\n        this.phase = UIPhase.PLAYERS_SELECTION\n    }\n\n    startGame = () => {\n        this.phase = UIPhase.GAME\n    }\n}\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\"\nimport { LocalStorageMgmnt } from \"../LocalStorageMgmnt\"\nimport { Language } from \"../../i18n/i18n\"\nimport { GamePhaseStore } from \"../GamePhaseStore/GamePhaseStore\"\nimport { UIPhase } from \"../../types\"\n\nexport type Theme = \"light\" | \"dark\" | \"system\"\n\nexport type UIKeys = \"drawer\" | \"language\" | \"theme\" | \"phase\"\n\nexport type UIValues = boolean | Language | Theme | UIPhase\n\nexport class UIStore {\n\n    /**\n     * Defaults\n     */\n    private defaultDrawerState = false\n    private defaultLanguage: Language = \"rus\"\n    private html = document.getElementsByTagName(\"html\")[0]\n\n    constructor(\n        private storeDispose: () => void,\n    ) {\n        makeAutoObservable(this)\n\n        // Theme stuff\n        this.themeReaction(this.theme)\n        reaction(() => this.theme, this.themeReaction)\n        UIStore.matchMedia.addEventListener(\"change\", this.matchMediaListener, true)\n\n        // Drawer stuff\n        reaction(() => this.drawer, this.drawerReaction)\n    }\n\n    storage = new LocalStorageMgmnt<UIKeys, UIValues>(\"ui\")\n\n    gamePhase = new GamePhaseStore(this.storage)\n\n    restartGame = () => {\n        this.gamePhase.goToPreGame()\n        this.storeDispose()\n        this.drawer = false\n        document.body.classList.remove(...document.body.classList)\n    }\n\n    // Drawer - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n    private _drawer = this.storage.getOrApply(\"drawer\", () => this.defaultDrawerState)\n\n    get drawer() {\n        return this._drawer\n    }\n\n    private set drawer(flag: boolean) {\n        this._drawer = flag\n        this.storage.set(\"drawer\", this.drawer)\n    }\n\n    closeDrawer = () => {\n        this.drawer = false\n    }\n\n    toggleDrawer = () => {\n        this.drawer = !this.drawer\n    }\n\n    drawerReaction = (flag: boolean) => {\n        if (flag) {\n            this.html.style.overflow = \"hidden\"\n        } else {\n            this.html.style.overflow = \"visible\"\n        }\n    }\n\n    // Language - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n    private _language: Language = this.storage.getOrApply(\"language\", () => this.defaultLanguage)\n\n    get language() {\n        return this._language\n    }\n\n    set language(language: Language) {\n        this._language = language\n        this.storage.set(\"language\", this.language)\n    }\n\n    setLanguage = (language: Language): () => void => (): void => {\n        this.language = language\n        // eslint-disable-next-line no-self-assign\n        window.location = window.location\n    }\n\n    // Theme - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n    private static get matchMedia() {\n        return window.matchMedia(\"(prefers-color-scheme: dark)\")\n    }\n\n    private static toggleTheme(e: any): Theme {\n        return e.matches ? \"dark\" : \"light\"\n    }\n\n    private matchMediaListener = (e: any) => {\n        this.theme = UIStore.toggleTheme(e)\n    }\n\n    private _theme: Theme = this.storage.getOrApply(\"theme\", () => UIStore.toggleTheme(UIStore.matchMedia))\n\n    get theme(): Theme {\n        return this._theme\n    }\n\n    set theme(theme: Theme) {\n        this.storage.set(\"theme\", theme)\n        this._theme = theme\n    }\n\n    changeTheme = (theme: Theme): () => void => () => {\n        runInAction(() => {\n            this.theme = theme\n        })\n    }\n\n    private themeReaction = (theme: Theme): void => {\n        this.html.classList.remove(...this.html.classList)\n        if (theme !== \"system\") {\n            if (theme === \"dark\") {\n                this.html.classList.add(\"theme-dark\")\n            } else {\n                this.html.classList.add(\"theme-light\")\n            }\n        }\n    }\n\n    dispose(): void {\n        UIStore.matchMedia.removeEventListener(\"change\", this.matchMediaListener)\n    }\n}\n","import type { FC } from \"react\"\nimport style from \"./Sphere.module.css\"\nimport cx from \"classnames\"\nimport { PlayerId } from \"../../../types\"\n\ninterface PlayerPurpleProps {\n    color: PlayerId\n    alt?: boolean\n}\n\nexport const Sphere: FC<PlayerPurpleProps> = ({ color, alt }) => (\n    <div className={cx(style.wrapper, style[color], { [style.alt]: alt })} />\n)\n","import type { FC } from \"react\"\nimport styles from \"./StonesWrapper.module.css\"\n\nexport const StonesWrapper: FC = ({ children }) => (\n    <div className={styles.wrap}>\n        {children}\n    </div>\n)\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { createContext, FC, useContext, useEffect } from \"react\"\nimport { Store } from \"./Store\"\n\nconst HexContext = createContext<Store | null>(null)\n\nexport const StoreProvider: FC<{ store: Store }> = ({ children, store }) => {\n    useEffect(() => store.dispose, [])\n    return (\n        <HexContext.Provider value={store}>\n            {children}\n        </HexContext.Provider>\n    )\n}\n\nexport const useStore = (): Store => {\n    const store = useContext(HexContext)\n    if (!store) {\n        throw new Error(\"hook must be used within a Provider\")\n    }\n    return store\n}\n","export class Hex {\n\n    constructor(\n        public q: number,\n        public r: number,\n        public s: number,\n    ) {\n        if (Math.round(q + r + s) !== 0) {\n            throw new Error('q + r + s must be 0')\n        }\n    }\n\n    public get id() {\n        return `${this.q},${this.r}`\n    }\n\n    public add(b: Hex): Hex {\n        return new Hex(\n            this.q + b.q,\n            this.r + b.r,\n            this.s + b.s,\n        )\n    }\n\n    public subtract(b: Hex): Hex {\n        return new Hex(\n            this.q - b.q,\n            this.r - b.r,\n            this.s - b.s,\n        )\n    }\n\n    public scale(k: number): Hex {\n        return new Hex(\n            this.q * k,\n            this.r * k,\n            this.s * k,\n        )\n    }\n\n    public rotateLeft(): Hex {\n        return new Hex(\n            -this.s,\n            -this.q,\n            -this.r,\n        )\n    }\n\n    public rotateRight(): Hex {\n        return new Hex(\n            -this.r,\n            -this.s,\n            -this.q,\n        )\n    }\n\n    public static directions: Hex[] = [\n        new Hex(1, 0, -1),\n        new Hex(1, -1, 0),\n        new Hex(0, -1, 1),\n        new Hex(-1, 0, 1),\n        new Hex(-1, 1, 0),\n        new Hex(0, 1, -1),\n    ]\n\n    public static direction(direction: number): Hex {\n        return Hex.directions[direction]\n    }\n\n    public neighbor(direction: number): Hex {\n        return this.add(Hex.direction(direction))\n    }\n\n    public static diagonals: Hex[] = [\n        new Hex(2, -1, -1),\n        new Hex(1, -2, 1),\n        new Hex(-1, -1, 2),\n        new Hex(-2, 1, 1),\n        new Hex(-1, 2, -1),\n        new Hex(1, 1, -2),\n    ]\n\n    public diagonalNeighbor(direction: number): Hex {\n        return this.add(Hex.diagonals[direction])\n    }\n\n    public len(): number {\n        return (Math.abs(this.q) + Math.abs(this.r) + Math.abs(this.s)) / 2\n    }\n\n    public distance(b: Hex): number {\n        return this.subtract(b).len()\n    }\n\n    public round(): Hex {\n        let qi = Math.round(this.q)\n        let ri = Math.round(this.r)\n        let si = Math.round(this.s)\n\n        const q_diff = Math.abs(qi - this.q)\n        const r_diff = Math.abs(ri - this.r)\n        const s_diff = Math.abs(si - this.s)\n\n        if (q_diff > r_diff && q_diff > s_diff) {\n            qi = -ri - si\n        } else if (r_diff > s_diff) {\n            ri = -qi - si\n        } else {\n            si = -qi - ri\n        }\n\n        return new Hex(qi, ri, si)\n    }\n\n    public lerp(b: Hex, t: number): Hex {\n        return new Hex(\n            this.q * (1.0 - t) + b.q * t,\n            this.r * (1.0 - t) + b.r * t,\n            this.s * (1.0 - t) + b.s * t,\n        )\n    }\n\n    public linedraw(b: Hex): Hex[] {\n        const N = this.distance(b)\n        const a_nudge: Hex = new Hex(this.q + 1e-06, this.r + 1e-06, this.s - 2e-06)\n        const b_nudge: Hex = new Hex(b.q + 1e-06, b.r + 1e-06, b.s - 2e-06)\n        const results: Hex[] = []\n        const step = 1.0 / Math.max(N, 1)\n\n        for (let i = 0; i <= N; i++) {\n            results.push(a_nudge.lerp(b_nudge, step * i).round())\n        }\n        return results\n    }\n\n}\n","import { Hex } from \"../../../jsx/Game/Hexagons/Hex\"\n\nexport const toHex = (q: number, r: number) => new Hex(q, r, (q + r) * -1)\n","export class Orientation {\n    constructor(\n        public f0: number,\n        public f1: number,\n        public f2: number,\n        public f3: number,\n        public b0: number,\n        public b1: number,\n        public b2: number,\n        public b3: number,\n        public start_angle: number,\n    ) {\n    }\n}\n","export class Point {\n\n    constructor(\n        public x: number,\n        public y: number,\n    ) {\n    }\n\n}\n","import { Orientation } from './Orientation'\nimport { Point } from './Point'\nimport { Hex } from './Hex'\n\nexport class Layout {\n\n    constructor(\n        public orientation: Orientation,\n        public size: Point,\n        public origin: Point,\n    ) {\n        // console.log('Layout:::constructor')\n    }\n\n    public static pointy: Orientation = new Orientation(\n        Math.sqrt(3.0),\n        Math.sqrt(3.0) / 2.0,\n        0.0,\n        3.0 / 2.0,\n        Math.sqrt(3.0) / 3.0,\n        -1.0 / 3.0,\n        0.0,\n        2.0 / 3.0,\n        0.5,\n    )\n\n    public static flat: Orientation = new Orientation(\n        3.0 / 2.0,\n        0.0,\n        Math.sqrt(3.0) / 2.0,\n        Math.sqrt(3.0),\n        2.0 / 3.0,\n        0.0,\n        -1.0 / 3.0,\n        Math.sqrt(3.0) / 3.0,\n        0.0,\n    )\n\n    public hexToPixel(h: Hex): Point {\n        const M = this.orientation\n        const size = this.size\n        const origin = this.origin\n        const x = (M.f0 * h.q + M.f1 * h.r) * size.x\n        const y = (M.f2 * h.q + M.f3 * h.r) * size.y\n        return new Point(x + origin.x, y + origin.y)\n    }\n\n    public pixelToHex(p: Point): Hex {\n        const M = this.orientation\n        const size: Point = this.size\n        const origin: Point = this.origin\n        const pt: Point = new Point((p.x - origin.x) / size.x, (p.y - origin.y) / size.y)\n        const q: number = M.b0 * pt.x + M.b1 * pt.y\n        const r: number = M.b2 * pt.x + M.b3 * pt.y\n        return new Hex(q, r, -q - r)\n    }\n\n    public hexCornerOffset(corner: number): Point {\n        const M = this.orientation\n        const size = this.size\n        const angle = 2.0 * Math.PI * (M.start_angle - corner) / 6.0\n        return new Point(\n            size.x * Math.cos(angle),\n            size.y * Math.sin(angle),\n        )\n    }\n\n    public polygonCorners(h: Hex): Point[] {\n        const corners: Point[] = []\n        const center: Point = this.hexToPixel(h)\n        for (let i = 0; i < 6; i++) {\n            const offset: Point = this.hexCornerOffset(i)\n            corners.push(new Point(center.x + offset.x, center.y + offset.y))\n        }\n        return corners\n    }\n\n}\n","import { Layout } from \"../../../jsx/Game/Hexagons/Layout\"\nimport { Point } from \"../../../jsx/Game/Hexagons/Point\"\nimport { Store } from \"../Store\"\n\nexport const renderLayout = (store: Store): Layout => {\n    const orientation = store.orientationType\n\n    return new Layout(\n        Layout[orientation],\n        new Point(1, 1),\n        new Point(\n            0,\n            orientation === \"pointy\" ? store.largeSide : store.smallSide,\n        ),\n    )\n}\n","import { CSSProperties } from \"react\"\nimport { toHex } from \"./toHex\"\nimport { Store } from \"../Store\"\nimport { renderLayout } from \"./renderLayout\"\n\ntype GetTransformCSS = (store: Store) => (q: number, r: number, map: [x1?: string, y1?: string, r1?: string]) => CSSProperties\n\nexport const getTransformCSS: GetTransformCSS = (store) =>\n    (q, r, [x1 = \"\", y1 = \"\", r1 = \"\"] = []) => {\n        const { x, y } = renderLayout(store).hexToPixel(toHex(q, r))\n\n        return {\n            transform: `translate(${[\n                `calc(${x - 1} * var(--R)${x1})`,\n                `calc(${y - store.ratio} * var(--R)${y1})`,\n            ].join(\", \")})${r1}`,\n        }\n    }\n","import { OrientationType, StoneType } from \"../../../types\"\n\nexport const stoneAngleMap: Record<OrientationType, Record<StoneType, [number?, number?, number?, number?, number?, number?]>> = {\n    pointy: {\n        [StoneType.sapphire]: [],\n        [StoneType.emerald]: [undefined, -30, 30, undefined, -30, 30],\n        [StoneType.amber]: [90, -30, 30, 90, -30, 30],\n    },\n    flat: {\n        [StoneType.sapphire]: [30],\n        [StoneType.emerald]: [30, undefined, 60, 30, undefined, 60],\n        [StoneType.amber]: [120, undefined, 60, 120, undefined, 60],\n    },\n}\n","import { Edge, StoneType } from \"../../../types\"\nimport { Store } from \"../Store\"\nimport { getRotate } from \"./getRotate\"\n\ntype EdgeToShiftMap = (store: Store) => (type: StoneType) => Record<Edge, [string, string, string?]>\n\nexport const edgeToShiftMap: EdgeToShiftMap = (store) => (type) => {\n    const isPointy = store.isPointy\n    const x = isPointy ? 1.5 : 1.8\n    const y = isPointy ? 2.75 : 3\n    const r = getRotate(store)(type)\n\n    return isPointy ? {\n        0: [` + var(--R) / ${x}`, /*--->*/ \"\" /*<---*/, r(0)],\n        5: [` + var(--R) / ${y}`, ` + var(--R) / ${x}`, r(1)],\n        4: [` + var(--R) / ${-y}`, ` + var(--R) / ${x}`, r(2)],\n        3: [` + var(--R) / ${-x}`, /*--->*/ \"\" /*<---*/, r(3)],\n        2: [` + var(--R) / ${-y}`, ` + var(--R) / ${-x}`, r(4)],\n        1: [` + var(--R) / ${y}`, ` + var(--R) / ${-x}`, r(5)],\n    } : {\n        0: [` + var(--R) / ${x}`, ` + var(--R) / ${y}`, r(0)],\n        5: [ /* ---------> */ \"\", ` + var(--R) / ${x * store.ratio}`, r(1)],\n        4: [` + var(--R) / ${-x}`, ` + var(--R) / ${y}`, r(2)],\n        3: [` + var(--R) / ${-x}`, ` + var(--R) / ${-y}`, r(3)],\n        2: [ /* ---------> */ \"\", ` + var(--R) / ${-x * store.ratio}`, r(4)],\n        1: [` + var(--R) / ${x}`, ` + var(--R) / ${-y}`, r(5)],\n    }\n}\n","import { Edge, StoneType } from \"../../../types\"\nimport { Store } from \"../Store\"\nimport { stoneAngleMap } from \"../maps/stoneAngleMap\"\n\nexport const getRotate = (store: Store) => (type: StoneType) => (edge: Edge): string | undefined => {\n    const rotate = stoneAngleMap[store.orientationType][type]\n    return rotate[edge] !== undefined ? ` rotate(${rotate[edge]}deg)` : undefined\n}\n","import { StoneId, StoneType } from \"../../../types\"\nimport { CSSProperties } from \"react\"\nimport { useStore } from \"../../../Storage/Store/StoreProvider\"\nimport { getTransformCSS } from \"../../../Storage/Store/applyers/getTransformCSS\"\nimport { edgeToShiftMap } from \"../../../Storage/Store/applyers/edgeToShiftMap\"\n\nexport const useStoneStyles = (id: StoneId): [type: StoneType, style: CSSProperties, isOut: boolean] => {\n    const store = useStore()\n    const [type, q, r, edge, isOut = false] = store.stones[id]\n\n    return [\n        type,\n        getTransformCSS(store)(\n            q,\n            r,\n            edgeToShiftMap(store)(type)[edge],\n        ),\n        isOut,\n    ]\n}\n","import type { CSSProperties, FC } from \"react\"\nimport cx from \"classnames\"\nimport { observer } from \"mobx-react\"\nimport { StoneId, StoneType } from \"../../../types\"\nimport styles from \"./Stone.module.css\"\nimport { useStoneStyles } from \"./useStoneStyles\"\n\ninterface StoneProps {\n    id: StoneId\n    isStatic?: true\n}\n\ninterface StoneCProps extends StoneProps {\n    className?: string | undefined;\n    style?: CSSProperties | undefined\n    index?: number\n}\n\nexport const StoneC: FC<StoneCProps> = ({\n    id,\n    style,\n    className,\n    index,\n}) => {\n    const [type] = useStoneStyles(id)\n\n    return (\n        <div\n            {...(\n                localStorage.getItem(\"DEBUG\") === \"true\"\n                    ? index ? { \"data-id\": index } : { \"data-id\": id }\n                    : {}\n            )}\n            style={style}\n            className={cx(styles.root, styles[StoneType[type]], className)}\n        />\n    )\n}\n\nexport const Stone: FC<StoneProps> = observer(({ id, isStatic }) => {\n    const [, style, isOut] = useStoneStyles(id)\n\n    if (!isStatic && isOut) {\n        return null\n    }\n\n    return (\n        <StoneC id={id} style={style} />\n    )\n})\n","import { i18nKeys } from './i18nKeys'\nimport { rus } from './rus'\nimport { eng } from './eng'\n\nexport type Language = 'rus' | 'eng'\n\nconst languageDefaultState: Language = 'rus'\n\ntype I18n = (key: i18nKeys | string) => string\n\nconst commonSettings = JSON.parse(localStorage.getItem('ui') || JSON.stringify({\n  language: languageDefaultState,\n}))\n\nconst lang: Language = commonSettings.language || languageDefaultState\n\nexport type LanguageMap = Record<i18nKeys, string>\n\nconst languagesMap: Record<Language, LanguageMap> = {\n  rus,\n  eng,\n}\n\nexport const i18n: I18n = (key) => {\n  const res = languagesMap[lang][key as i18nKeys]\n\n  if (res === undefined) {\n    return `~${key}~`\n  }\n\n  return res\n}\n","import { LanguageMap } from \"./i18n\"\n\nexport const rus: LanguageMap = {\n    yacht: \"Яхта\",\n    indigo: \"Индиго\",\n    systemTheme: \"Из системы\",\n\n    \"button.startNewGame\": \"Начать новую игру\",\n    \"button.restartGame\": \"Начать заново\",\n    \"button.startGame\": \"Начать игру\",\n    \"button.cancel\": \"Отмена\",\n    \"button.addPlayer\": \"Добавить игрока\",\n    \"button.restart\": \"Начать заново\",\n    \"button.rotate\": \"Повернуть\",\n    \"button.light\": \"Светлая\",\n    \"button.dark\": \"Темная\",\n    \"button.system\": \"Как в системе\",\n    \"button.apply\": \"Применить\",\n    \"button.viewBoard\": \"Посмотреть игру\",\n    \"button.readRules\": \"Читать правила\",\n    \"button.close\": \"Закрыть\",\n\n    currentGameWillBeLost: \"Текущая игра будет утеряна.\",\n    \"result.text.h1\": \"Игра окончена!\",\n    winner: \"Победитель\",\n\n}\n","import { LanguageMap } from \"./i18n\"\n\nexport const eng: LanguageMap = {\n    yacht: \"Yacht\",\n    indigo: \"Indigo\",\n    systemTheme: \"System theme\",\n\n    \"button.startNewGame\": \"Start new game\",\n    \"button.restartGame\": \"Restart game\",\n    \"button.cancel\": \"Cancel\",\n    \"button.startGame\": \"Start game\",\n    \"button.addPlayer\": \"Add player\",\n    \"button.restart\": \"Restart\",\n    \"button.rotate\": \"Rotate\",\n    \"button.light\": \"Light\",\n    \"button.dark\": \"Dark\",\n    \"button.system\": \"System\",\n    \"button.apply\": \"Apply\",\n    \"button.viewBoard\": \"View board\",\n    \"button.readRules\": \"Read rules\",\n    \"button.close\": \"Close\",\n\n    currentGameWillBeLost: \"Current game will be lost.\",\n    \"result.text.h1\": \"Game is finished!\",\n    winner: \"Winner\",\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { createContext, FC, useContext, useEffect } from \"react\"\nimport { UIStore } from \"./UIStore\"\n\nconst Context = createContext<UIStore | null>(null)\n\nexport const UIStoreProvider: FC<{ store: UIStore }> = ({ children, store }) => {\n    useEffect(() => store.dispose, [])\n\n    return (\n        <Context.Provider value={store}>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport const useUIStore = (): UIStore => {\n    const store = useContext(Context)\n    if (!store) {\n        throw new Error('hook must be used within a Provider')\n    }\n    return store\n}\n","import type { FC } from \"react\"\nimport { i18n } from \"../../i18n/i18n\"\nimport buttonStyles from \"../Components/Button/Button.module.css\"\nimport { useUIStore } from \"../../Storage/UIStore/UIStoreProvider\"\n\nexport const StartButton: FC = () => (\n    <div style={{\n        height: \"calc(var(--spacing) * 20)\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    }}>\n        <button\n            className={buttonStyles.main}\n            onClick={useUIStore().gamePhase.goToPlayersSelection}\n        >\n            {i18n(\"button.startNewGame\")}\n        </button>\n    </div>\n)\n","import type { FC } from \"react\"\nimport { Sphere } from \"../Game/Sphere/Sphere\"\nimport { PlayerId, StoneId } from \"../../types\"\nimport { StonesWrapper } from \"./StonesWrapper\"\nimport styles from \"./Rules.module.css\"\nimport { Stone } from \"../Game/Stone/Stone\"\nimport { StartButton } from \"./StartButton\"\nimport { i18n } from \"../../i18n/i18n\"\nimport buttonStyles from \"../Components/Button/Button.module.css\"\nimport { useUIStore } from \"../../Storage/UIStore/UIStoreProvider\"\n\nexport const Intro: FC = () => (\n    <div className={styles.root}>\n        <h2>\n            Indigo\n        </h2>\n\n        <div className={styles.players}>\n            <Sphere color={PlayerId.Player1} />\n            <Sphere color={PlayerId.Player2} />\n            <Sphere color={PlayerId.Player3} />\n            <Sphere color={PlayerId.Player4} />\n        </div>\n\n        <StonesWrapper>\n            <div />\n            <div>\n                <Stone id={StoneId.emerald0} isStatic />\n            </div>\n            <div>\n                <Stone id={StoneId.sapphire} isStatic />\n            </div>\n            <div>\n                <Stone id={StoneId.amber0} isStatic />\n            </div>\n        </StonesWrapper>\n\n        <StartButton />\n\n        <p style={{ fontStyle: \"italic\", textAlign: \"center\" }}>\n            Извилистые дорожки – удивительные повороты – настоящее волшебство!\n        </p>\n\n        <p>\n            Индиго – это тёмно-синий цвет, впервые добытый в древние времена из индийского растения индигоноски. Его\n            глубокий синий оттенок использовали во многих культурах и религиях в качестве символа бесконечности и\n            бессмертия. Этот цвет оказывает успокаивающее действие на организм человека, позволяя сохранять трезвый ум,\n            который понадобится участникам этой игры для добычи наиболее дорогих драгоценных камней.\n        </p>\n\n        <div style={{ textAlign: \"center\", margin: \"calc(var(--spacing) * 5) 0\" }}>\n            <button className={buttonStyles.button} onClick={useUIStore().toggleDrawer}>\n                {i18n(\"button.readRules\")}\n            </button>\n        </div>\n\n    </div>\n)\n","import { Player, PlayerId, Players } from \"../../../types\"\n// import { getRandomInt } from \"../../../helpers/random\"\n// import { PlayersStore } from \"../PlayersStore\"\n\nexport const playerInitData = (i: number): Player => ({\n    id: `p-${i}` as PlayerId,\n    stones: [],\n})\n\nexport const generateFirstTwoPlayers = (): Players => {\n    // const first = getRandomInt(1, PlayersStore.maxPlayersCount)\n    //\n    // let second\n    //\n    // do {\n    //     second = getRandomInt(1, PlayersStore.maxPlayersCount)\n    // } while (second === first)\n\n    // return [playerInitData(first), playerInitData(second)]\n\n    return [playerInitData(1), playerInitData(2)]\n}\n","export default __webpack_public_path__ + \"static/media/purple.93759707.svg\";","export default __webpack_public_path__ + \"static/media/turquoise.61dcddfd.svg\";","export default __webpack_public_path__ + \"static/media/coral.ff630484.svg\";","export default __webpack_public_path__ + \"static/media/white.de835116.svg\";","import { makeAutoObservable } from \"mobx\"\nimport { iLocalStorageMgmnt } from \"../LocalStorageMgmnt\"\nimport { Edge, Keys, Player, PlayerId, Players, PlayersGateways, StoneId, Values } from \"../../types\"\nimport { generateFirstTwoPlayers } from \"./applyers/generateFirstTwoPlayers\"\n\nimport purple from \"../../jsx/Game/Sphere/assets/purple.svg\"\nimport turquoise from \"../../jsx/Game/Sphere/assets/turquoise.svg\"\nimport coral from \"../../jsx/Game/Sphere/assets/coral.svg\"\nimport white from \"../../jsx/Game/Sphere/assets/white.svg\"\n\nconst playerIdToSVGMap: Record<PlayerId, string> = {\n    [PlayerId.Player1]: purple,\n    [PlayerId.Player2]: turquoise,\n    [PlayerId.Player3]: coral,\n    [PlayerId.Player4]: white,\n}\n\nexport class PlayersStore {\n\n    static ids: number[] = Object.keys(playerIdToSVGMap).map((id) => parseInt(id.split(\"-\")[1], 10))\n\n    static storageKey: Keys = \"players\"\n\n    static maxPlayersCount: number = Object.keys(playerIdToSVGMap).length\n\n    players: Players = []\n\n    gateways: PlayersGateways = {}\n\n    constructor(\n        public storage: iLocalStorageMgmnt<Keys, Values>,\n    ) {\n        this.init()\n        makeAutoObservable<PlayersStore, \"gateways\">(this, { gateways: false })\n    }\n\n    private init = () => {\n        this.players = this.storage.getOrApply<Players>(PlayersStore.storageKey, generateFirstTwoPlayers)\n        this.generatePlayersGateways()\n    }\n\n    private findGatewayOwnerId = (tileId: string, edgeFrom: Edge): PlayerId =>\n        this.players.find(\n            ({ id }) => this.gateways[id]!.find(\n                ([id, edge]) => id === tileId && edge === edgeFrom,\n            ),\n        )!.id\n\n    get leadingPlayer(): Player {\n        const stonesCount = this.players.map(({ stones }) => stones.length)\n        const index = stonesCount.indexOf(Math.max(...stonesCount))\n\n        return this.players[index]\n    }\n\n    addStoneToPlayer = (tileId: string, edgeFrom: Edge, stoneId: StoneId) => {\n        const playerId = this.findGatewayOwnerId(tileId, edgeFrom)\n        const index = this.players.findIndex(({ id }) => id === playerId)\n        this.players[index].stones.push(stoneId)\n        this.storage.set(PlayersStore.storageKey, this.players)\n    }\n\n    generatePlayersGateways = () => {\n        switch (this.players.length) {\n            case 2:\n                this.gateways[this.players[0].id] = [\n                    [\"-4,-1\", 0],\n                    [\"-3,-2\", 0],\n                    [\"-3,-2\", 5],\n                    [\"-2,-3\", 5],\n                    [\"-2,-3\", 0],\n                    [\"-1,-4\", 5],\n\n                    [\"5,-4\", 4],\n                    [\"5,-3\", 3],\n                    [\"5,-3\", 4],\n                    [\"5,-2\", 3],\n                    [\"5,-2\", 4],\n                    [\"5,-1\", 3],\n\n                    [\"-1,5\", 2],\n                    [\"-2,5\", 1],\n                    [\"-2,5\", 2],\n                    [\"-3,5\", 1],\n                    [\"-3,5\", 2],\n                    [\"-4,5\", 1],\n                ]\n\n                this.gateways[this.players[1].id] = [\n                    [\"1,-5\", 5],\n                    [\"2,-5\", 4],\n                    [\"2,-5\", 5],\n                    [\"3,-5\", 4],\n                    [\"3,-5\", 5],\n                    [\"4,-5\", 4],\n\n                    [\"4,1\", 3],\n                    [\"3,2\", 2],\n                    [\"3,2\", 3],\n                    [\"2,3\", 2],\n                    [\"2,3\", 3],\n                    [\"1,4\", 2],\n\n                    [\"-5,4\", 1],\n                    [\"-5,3\", 0],\n                    [\"-5,3\", 1],\n                    [\"-5,2\", 0],\n                    [\"-5,2\", 1],\n                    [\"-5,1\", 0],\n                ]\n                this.storage.set(\"players-gateways\", this.gateways)\n                break\n            case 3:\n            case 4:\n                console.error(\"not implemented\")\n                break\n        }\n    }\n\n    get entries() {\n        return Object.entries(this.players)\n    }\n\n    dispose = () => {\n        this.storage.destroy()\n        this.init()\n    }\n}\n","export const arrayDiff = (array1: any[], array2: any[]) => array1.filter((x) => !array2.includes(x))\n","import { PlayersStore } from \"../PlayersStore\"\n\nexport const savePlayers = (store: PlayersStore) => {\n    store.storage.set(PlayersStore.storageKey, store.players)\n}\n","import { PlayersStore } from \"../PlayersStore\"\nimport { arrayDiff } from \"../../../helpers/arrayDiff\"\n// import { getRandomInt } from \"../../../helpers/random\"\nimport { runInAction } from \"mobx\"\nimport { savePlayers } from \"./savePlayers\"\nimport { playerInitData } from \"./generateFirstTwoPlayers\"\n\ntype AddPlayer = (store: PlayersStore) => () => void\n\nexport const addPlayer: AddPlayer = (store) => () => {\n    runInAction(() => {\n        const ids = store.players.map(({ id }) => parseInt(id.split(\"-\")[1], 10))\n        const diff = arrayDiff(PlayersStore.ids, ids)\n        const index = diff[0]\n        // const index = diff[getRandomInt(0, diff.length - 1)]\n        store.players.push(playerInitData(index))\n        savePlayers(store)\n    })\n}\n","import { PlayerId } from \"../../../types\"\nimport { runInAction } from \"mobx\"\nimport { savePlayers } from \"./savePlayers\"\nimport { PlayersStore } from \"../PlayersStore\"\n\ntype RemovePlayerById = (store: PlayersStore) => (playerId: PlayerId) => () => void\n\nexport const removePlayerById: RemovePlayerById = (store) => (playerId) => () => {\n    runInAction(() => {\n        store.players.splice(\n            store.players.findIndex(({ id }) => id === playerId),\n            1,\n        )\n        savePlayers(store)\n    })\n}\n","import type { FC } from \"react\"\nimport { observer } from \"mobx-react\"\nimport cx from \"classnames\"\nimport { i18n } from \"../../i18n/i18n\"\nimport { useUIStore } from \"../../Storage/UIStore/UIStoreProvider\"\nimport { useStore } from \"../../Storage/Store/StoreProvider\"\nimport { Sphere } from \"../Game/Sphere/Sphere\"\nimport styles from \"./PlayerManager.module.css\"\nimport playerStyles from \"./Player.module.css\"\nimport { addPlayer } from \"../../Storage/PlayersStore/applyers/addPlayer\"\nimport { removePlayerById } from \"../../Storage/PlayersStore/applyers/removePlayerById\"\n\nexport const PlayerManager: FC = observer(() => {\n    const uiStore = useUIStore()\n    const store = useStore()\n\n    return (\n        <>\n            <div className={styles.playersWrapper}>\n                {store.playersStore.entries.map(([, { id }], index) => {\n                    const clear = store.playersStore.entries.length > 2 && index === store.playersStore.entries.length - 1\n\n                    return (\n                        <button\n                            key={id}\n                            className={cx(playerStyles.root, { [playerStyles.clear]: clear })}\n                            {...(clear && {\n                                onClick: removePlayerById(store.playersStore)(id),\n                            })}\n                        >\n                            <Sphere color={id} />\n                        </button>\n                    )\n                })}\n                {store.playersStore.entries.length < 4 && (\n                    <button className={playerStyles.add} onClick={addPlayer(store.playersStore)}>\n                        {i18n(\"button.addPlayer\")}\n                    </button>\n                )}\n            </div>\n            <div className={styles.actionsWrapper}>\n                <button className={styles.cancelButton} onClick={uiStore.gamePhase.goToPreGame}>\n                    {i18n(\"button.cancel\")}\n                </button>\n                <button className={styles.startGameButton} onClick={() => {\n                    uiStore.gamePhase.startGame()\n                    store.playerMoveReaction()\n                }}>\n                    {i18n(\"button.startGame\")}\n                </button>\n            </div>\n        </>\n    )\n})\n","import { MouseEvent } from \"react\"\nimport { HexType } from \"../../../types\"\nimport { Store } from \"../Store\"\nimport { runInAction } from \"mobx\"\n\ntype OnMouseMove = (store: Store) => (e: MouseEvent<HTMLDivElement>) => void\n\nexport const onMouseMove: OnMouseMove = (store) => (e) => {\n    if (store.preSit) {\n        return\n    }\n\n    const rect = e.currentTarget.getBoundingClientRect() as DOMRect\n    const hex = store.layout.pixelToHex({ x: e.pageX - rect.x, y: e.pageY - rect.y }).round()\n\n    if (store.tiles[hex.id] && store.tiles[hex.id].type === HexType.route && store.tiles[hex.id].tile === undefined) {\n        runInAction(() => {\n            store.hoveredId = hex.id\n        })\n    } else {\n        runInAction(() => {\n            store.hoveredId = null\n        })\n    }\n}\n","import { Store } from \"../Store\"\nimport { PlayerMove } from \"../../../types\"\n\nexport const getPlayerMoveTile = (store: Store): PlayerMove | string | undefined => {\n    const move = store.playerMove\n    let res = undefined\n    if (store.isRouteCrossroad) {\n        res = move[1]\n    } else if (move[1]) {\n        res = [move[1], move[2]].join(\"-\")\n    }\n    return res\n}\n","export const getRandomInt = (min: number, max: number): number => (\n    Math.floor(Math.random() * (max - min + 1)) + min\n)\n\nexport const rand = () => getRandomInt(1, 6)\n","import { Angle, TileName } from \"../../../types\"\nimport { getRandomInt } from \"../../../helpers/random\"\n\nexport const randAngle = (map: Record<TileName, Angle[]>, tile: TileName): number => (\n    getRandomInt(0, map[tile].length - 1)\n)\n","import { Angle, TileName } from \"../../../types\"\n\nexport const tileNameToAngle: Record<TileName, Angle[]> = {\n    s: [0, 60],\n    c: [],\n    t: [0, 60, 120],\n    l: [0, 60, 120],\n    h: [0, 60, 120, 180, 240, 300],\n}\n","import { Angle, TileName } from \"../../../types\"\nimport { randAngle } from \"./randAngle\"\nimport { Store} from \"../Store\"\nimport { tileNameToAngle } from \"../maps/TileNameToAngle\"\n\nexport const getRandomTile = (store: Store): [TileName, Angle] | [] => {\n    const tile = store.leftTiles.pop()\n    store.storage.set(\"tiles-left\", store.leftTiles)\n\n    if (tile) {\n        return [tile, tileNameToAngle[tile][randAngle(tileNameToAngle, tile)]]\n    }\n\n    return []\n}\n","import { Edge, RouteTiles } from \"../../../types\"\n\nexport const routeTileIdToEdgeMap: Record<keyof typeof RouteTiles, [\n    edge: Edge,\n    edge: Edge,\n    edge: Edge,\n    edge: Edge,\n    edge: Edge,\n    edge: Edge\n]> = {\n    \"l-0\": [4, 3, 5, 1, 0, 2],\n    \"l-60\": [2, 4, 0, 5, 1, 3],\n    \"l-120\": [3, 5, 4, 0, 2, 1],\n    \"h-0\": [4, 5, 3, 2, 0, 1],\n    \"h-60\": [4, 2, 1, 5, 0, 3],\n    \"h-120\": [1, 0, 4, 5, 2, 3],\n    \"h-180\": [5, 3, 4, 1, 2, 0],\n    \"h-240\": [2, 3, 0, 1, 5, 4],\n    \"h-300\": [2, 5, 0, 4, 3, 1],\n    \"t-0\": [1, 0, 5, 4, 3, 2],\n    \"t-60\": [5, 4, 3, 2, 1, 0],\n    \"t-120\": [3, 2, 1, 0, 5, 4],\n    \"s-0\": [5, 2, 1, 4, 3, 0],\n    \"s-60\": [1, 0, 3, 2, 5, 4],\n    c: [3, 4, 5, 0, 1, 2],\n}\n","import { Edge, TreasureTiles } from \"../../../types\"\n\nexport const treasureTileIdToEdgeMap: Record<keyof typeof TreasureTiles, [\n    edge: Edge,\n    edge: Edge,\n    edge: Edge,\n    edge: Edge,\n    edge: Edge,\n    edge: Edge,\n]> = {\n    center: [0, 0, 0, 0, 0, 0],\n    \"tr-b\": [4, 0, 0, 0, 0, 0],\n    \"tr-b-l\": [0, 0, 0, 5, 0, 3],\n    \"tr-b-r\": [0, 5, 0, 0, 0, 1],\n    \"tr-t\": [0, 3, 0, 1, 0, 0],\n    \"tr-t-l\": [0, 0, 4, 0, 2, 0],\n    \"tr-t-r\": [2, 0, 0, 0, 0, 0],\n}\n","import { Store } from \"../Store\"\nimport { keys, runInAction } from \"mobx\"\nimport { Edge, HexType, RouteTiles, StoneId, TreasureTiles } from \"../../../types\"\nimport { routeTileIdToEdgeMap } from \"../maps/routeTileIdToEdgeMap\"\nimport { treasureTileIdToEdgeMap } from \"../maps/treasureTileIdToEdgeMap\"\nimport { Hex } from \"../../../jsx/Game/Hexagons/Hex\"\nimport { toHex } from \"./toHex\"\n\nconst getOppositeCorner = (d: number): Edge => (d + 3) % 6 as Edge\nconst sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms))\n\ntype Res = [q: number, r: number, edge: Edge][]\n\nclass Klass {\n\n    constructor(\n        private store: Store,\n        private stoneId: StoneId,\n    ) {\n        const [, q, r, edge, isOut] = this.store.stones[stoneId]\n        if (!isOut) {\n            this.run(q, r, edge)\n        }\n    }\n\n    private path: Res = []\n\n    private run(q: number, r: number, edge: Edge) {\n        const neighbor = this.store.tiles[toHex(q, r).neighbor(edge).id]\n\n        if (neighbor) {\n            const { hex, type, tile } = neighbor\n\n            switch (type) {\n                case HexType.treasure: {\n                    if (tile) {\n                        const routeTile = TreasureTiles[tile!] as keyof typeof TreasureTiles\n                        const edgeFrom = getOppositeCorner(edge)\n                        const edgeTo = treasureTileIdToEdgeMap[routeTile][edgeFrom]\n                        this.cacheAndRun(hex, edgeTo)\n                    } else {\n                        void this.move()\n                    }\n                    break\n                }\n                case HexType.route: {\n                    if (tile) {\n                        const routeTile = RouteTiles[tile!] as keyof typeof RouteTiles\n                        const edgeFrom = getOppositeCorner(edge)\n                        const edgeTo = routeTileIdToEdgeMap[routeTile][edgeFrom]\n                        this.cacheAndRun(hex, edgeTo)\n                    } else {\n                        void this.move()\n                    }\n                    break\n                }\n                case HexType.gateway: {\n                    const edgeFrom = getOppositeCorner(edge)\n                    this.path.push([hex.q, hex.r, edgeFrom])\n\n                    ;(async () => {\n                        await this.move()\n                        this.store.playersStore.addStoneToPlayer(hex.id, edgeFrom, this.stoneId)\n\n                        runInAction(() => {\n                            this.store.stones[this.stoneId][4] = true\n                            this.store.storage.set(\"stones\", this.store.stones)\n                        })\n                    })()\n                    break\n                }\n            }\n        }\n    }\n\n    private cacheAndRun(hex: Hex, edge: Edge) {\n        this.path.push([hex.q, hex.r, edge])\n        this.run(hex.q, hex.r, edge)\n    }\n\n    private async move() {\n        for (const [q, r, edge] of this.path) {\n            runInAction(() => {\n                this.store.stones[this.stoneId][1] = q\n                this.store.stones[this.stoneId][2] = r\n                this.store.stones[this.stoneId][3] = edge\n                this.store.storage.set(\"stones\", this.store.stones)\n            })\n            await sleep(500)\n        }\n    }\n}\n\nexport const moveStones = (store: Store): void => {\n    keys(store.stones).map((value) =>\n        new Klass(store, value as StoneId),\n    )\n}\n","import { getPlayerMoveTile } from \"./playerMoveTile\"\nimport { Angle, RouteTiles, TileName } from \"../../../types\"\nimport { nextMove } from \"./nextMove\"\nimport { saveTiles } from \"./saveTiles\"\nimport { Store } from \"../Store\"\nimport { moveStones } from \"./moveStones\"\nimport { runInAction } from \"mobx\"\nimport type { MouseEvent } from \"react\"\n\nexport const applySit = (store: Store) => () => {\n    runInAction(() => {\n        store.preSit = false\n    })\n\n    if (store.hoveredId !== null && getPlayerMoveTile(store) !== undefined) {\n        const [, name, angle, , nextAngle] = store.playerMove\n        const newRouteTile: [TileName?, Angle?] = [name]\n\n        if (store.playerMove.length === 5 && nextAngle !== undefined) {\n            newRouteTile.push(nextAngle)\n        } else if (angle !== undefined) {\n            newRouteTile.push(angle)\n        }\n\n        runInAction(() => {\n            if (store.hoveredId !== null) {\n                store.tiles[store.hoveredId].tile = RouteTiles[newRouteTile.join(\"-\") as keyof typeof RouteTiles]\n            }\n        })\n\n        moveStones(store)\n        nextMove(store)\n        saveTiles(store)\n\n        runInAction(() => {\n            store.hoveredId = null\n            store.gameResultsOpen = true\n        })\n    }\n}\n\nexport const applySitButton = (store: Store) => (e: MouseEvent<HTMLButtonElement>): void => {\n    e.stopPropagation()\n    applySit(store)()\n}\n","import { getRandomTile } from \"./getRandomTile\"\nimport { Store } from \"../Store\"\n\nexport const nextMove = (store: Store): void => {\n    const index = store.playersStore.entries.findIndex(([, { id }]) => id === store.playerMove[0])\n    const keys = Object.keys(store.playersStore.players)\n    const nextKey = parseInt(keys[keys.length - 1 > index ? index + 1 : 0], 10)\n    const [tile, angle] = getRandomTile(store)\n    store.playerMove = [store.playersStore.players[nextKey].id, tile, angle]\n}\n","import { HexType, SavedTilesValue } from \"../../../types\"\nimport { Store } from \"../Store\"\n\nexport const saveTiles = (store: Store) => {\n    const routeTiles: SavedTilesValue[] = []\n    const treasureTiles: SavedTilesValue[] = []\n\n    Object.entries(store.tiles).forEach(([, {\n        hex: { q, r },\n        tile,\n        type,\n        stones,\n    }]) => {\n        if (type === HexType.route) {\n            const arr: SavedTilesValue = [q, r]\n            if (tile !== undefined) {\n                arr.push(tile)\n            }\n            if (stones !== undefined) {\n                arr.push(stones)\n            }\n            routeTiles.push(arr)\n        }\n        if (type === HexType.treasure) {\n            const arr: SavedTilesValue = [q, r, tile]\n            if (stones !== undefined) {\n                arr.push(stones)\n            }\n            treasureTiles.push(arr)\n        }\n    })\n\n    store.storage.set(\"route-tiles\", routeTiles)\n    store.storage.set(\"treasure-tiles\", treasureTiles)\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { FC, useEffect, useMemo, useRef } from \"react\"\nimport { observer } from \"mobx-react\"\nimport { useStore } from \"../../../Storage/Store/StoreProvider\"\nimport { onMouseMove } from \"../../../Storage/Store/applyers/onMouseMove\"\nimport { applySit } from \"../../../Storage/Store/applyers/applySit\"\n// import { onClick } from \"../../../Storage/Store/applyers/onClick\"\nimport \"./Arena.css\"\n// import { moveStones } from \"../../../Storage/Store/applyers/moveStones\"\n\nexport const ArenaWrapper: FC = observer(({ children }) => {\n    const store = useStore()\n    const arenaRef = useRef<HTMLDivElement | null>(null)\n\n    useEffect(() => {\n        store.arenaElement = arenaRef.current\n    }, [store.arenaElement])\n\n    return (\n        <div\n            ref={arenaRef}\n            className={store.orientationType}\n            {...useMemo(() => {\n                if (store.arenaElement === null) {\n                    return {}\n                }\n\n                return {\n                    // onClick: () => moveStones(store),\n                    onMouseMove: onMouseMove(store),\n                    onDoubleClick: applySit(store),\n                    children,\n                }\n            }, [store.arenaElement, store.R])}\n        />\n    )\n})\n","export default __webpack_public_path__ + \"static/media/hex.610f0d8a.svg\";","import { observer } from \"mobx-react\"\nimport { CSSProperties, FC } from \"react\"\nimport svg from \"../../../assets/hex.svg\"\nimport { AllTiles, Data, IAllTiles } from \"../../../types\"\n\nexport interface TileProps {\n    qr: string\n    tile?: IAllTiles\n}\n\nconst E: FC<{ style: CSSProperties }> = ({ style, children }) => (\n    <div style={{\n        backgroundColor: \"#ccc\", color: \"#333\", borderRadius: 2, position: \"absolute\", fontSize: \"90%\",\n        padding: 1,\n        lineHeight: 1,\n        ...style,\n    }}>\n        {children}\n    </div>\n)\n\nexport const Tile: FC<Data<TileProps>> = observer(({ data }) => (\n    <div\n        data-qr={data.qr}\n        style={{ backgroundImage: `url(${svg}#${(data.tile !== undefined && AllTiles[data.tile]) || \"_\"})` }}\n    >\n        {\n            // @ts-ignore\n            localStorage.getItem(\"DEBUG\") === \"true\" && (\n                <>\n                    <E style={{ top: \"5%\", left: \"50%\" }}>2</E>\n                    <E style={{ top: \"20%\", left: \"17%\" }}>3</E>\n                    <E style={{ top: \"20%\", right: \"17%\" }}>1</E>\n                    <E style={{ bottom: \"20%\", right: \"17%\" }}>0</E>\n                    <E style={{ bottom: \"20%\", left: \"17%\" }}>4</E>\n                    <E style={{ bottom: \"5%\", left: \"50%\" }}>5</E>\n                    <div style={{\n                        fontSize: \"150%\",\n                        backgroundColor: \"#ccc\", color: \"#666\", borderRadius: 2, padding: 2, lineHeight: 1,\n                        position: \"absolute\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\",\n                    }}>\n                        {data.qr}\n                    </div>\n                </>\n            )}\n    </div>\n))\n","import type { FC } from \"react\"\nimport { useStore } from \"../../../Storage/Store/StoreProvider\"\nimport { Tile, TileProps } from \"./Tile\"\nimport { makeAutoObservable } from \"mobx\"\nimport \"./TileCoords.css\"\nimport \"./Tile.css\"\n\nexport const Tiles: FC = () => (\n    <>\n        {Object.entries(useStore().tiles).map((entry) => (\n            <Tile\n                key={entry[0]}\n                data={makeAutoObservable<TileProps>({\n                    get qr() {\n                        return entry[1].hex.id\n                    },\n                    get tile() {\n                        return entry[1].tile\n                    },\n                })}\n            />\n        ))}\n    </>\n)\n","import { tileNameToAngle } from \"../maps/TileNameToAngle\"\nimport { Angle } from \"../../../types\"\nimport { Store } from \"../Store\"\nimport { MouseEvent } from \"react\"\n\nconst rotate = (store: Store) => (rotateBack: boolean): void => {\n    if (store.playerMove[1] && !store.isRouteCrossroad) {\n        const [playerId, tile, angle = 0, rotateAngle, savedNextAngle] = store.playerMove\n        const angles = tileNameToAngle[tile]\n\n        let nextAngle\n        let nextRotateAngle\n        let angl = angle\n\n        if (savedNextAngle !== undefined) {\n            nextAngle = savedNextAngle\n            angl = savedNextAngle\n        }\n\n        if (rotateBack) {\n            const firstAngle = angles[0]\n            const lastAngle = angles[angles.length - 1]\n            if (angl === firstAngle) {\n                nextAngle = lastAngle\n            } else {\n                nextAngle = angl - 60\n            }\n        } else {\n            const lastAngle = angles[angles.length - 1]\n            if (angl < lastAngle) {\n                nextAngle = angl + 60\n            } else if (angl === lastAngle) {\n                nextAngle = angles[0]\n            }\n        }\n\n        if (rotateAngle === undefined) {\n            nextRotateAngle = 60 * (rotateBack ? -1 : 1)\n        } else {\n            nextRotateAngle = rotateAngle + 60 * (rotateBack ? -1 : 1)\n        }\n\n        store.playerMove = [playerId, tile, angle, nextRotateAngle, nextAngle as Angle]\n    }\n}\n\nexport const rotateLeft = (store: Store) => (): void => {\n    rotate(store)(false)\n}\n\nexport const rotateLeftButton = (store: Store) => (e: MouseEvent<HTMLButtonElement>): void => {\n    e.stopPropagation()\n    rotateLeft(store)()\n}\n\nexport const rotateRight = (store: Store) => (): void => {\n    rotate(store)(true)\n}\n\nexport const rotateRightButton = (store: Store) => (e: MouseEvent<HTMLButtonElement>) => {\n    e.stopPropagation()\n    rotateRight(store)()\n}\n","import { CSSProperties } from \"react\"\n\nexport const cssBgUrl = (url: string): CSSProperties => ({\n    backgroundImage: `url(${url})`,\n})\n","import { CSSProperties } from \"react\"\nimport { cssBgUrl } from \"./cssBgUrl\"\nimport svg from \"../../../assets/hex.svg\"\nimport { getPlayerMoveTile } from \"./playerMoveTile\"\nimport { Store } from \"../Store\"\n\nexport const playerMoveRouteTile = (store: Store): CSSProperties => {\n    const playerMove = store.playerMove\n    if (playerMove[1]) {\n        return {\n            ...cssBgUrl([svg, \"#\", getPlayerMoveTile(store)].join(\"\")),\n            ...(playerMove.length >= 4 && playerMove[3] !== undefined ? {\n                transform: `translate(var(--X), var(--Y)) rotate(${playerMove[3]}deg)`,\n            } : {}),\n        }\n    }\n    return {}\n}\n","import { StoneId } from \"../types\"\n\nexport const calcScore = (stones: StoneId[]) => (\n    stones.reduce((prev, curr) => {\n        switch (curr[0]) {\n            case \"s\":\n                return prev + 3\n            case \"e\":\n                return prev + 2\n            case \"a\":\n                return prev + 1\n            default:\n                return prev\n        }\n    }, 0)\n)\n","import type { FC } from \"react\"\nimport { observer } from \"mobx-react\"\nimport cx from \"classnames\"\nimport { useStore } from \"../../../Storage/Store/StoreProvider\"\nimport { rotateRight } from \"../../../Storage/Store/applyers/rotate\"\nimport { playerMoveRouteTile } from \"../../../Storage/Store/applyers/playerMoveRouteTile\"\nimport { PlayerId, StoneId } from \"../../../types\"\nimport styles from \"./Seats.module.css\"\nimport { StoneC } from \"../Stone/Stone\"\nimport { calcScore } from \"../../../helpers/calcScore\"\n\nexport interface SeatProps {\n    playerClass: string\n    playerId: PlayerId\n    stones: StoneId[]\n}\n\nexport const Seat: FC<SeatProps> = observer(({ playerId, playerClass, stones }) => {\n    const store = useStore()\n\n    return (\n        <>\n            {playerId === store.playerMove[0] && (\n                <div\n                    className={cx(styles.hex, playerClass)}\n                    style={playerMoveRouteTile(store)}\n                    onClick={rotateRight(store)}\n                />\n            )}\n            {stones.length > 0 && (\n                <>\n                    <div className={cx(styles.score, playerClass)}>\n                        {calcScore(stones)}\n                    </div>\n                    {stones.map((stone, index) => (\n                        <div key={stone} className={cx(styles.stone, playerClass, styles[`s-${index + 1}`])}>\n                            <StoneC id={stone} index={index + 1} />\n                        </div>\n                    ))}\n                </>\n            )}\n        </>\n    )\n})\n","import React, { FC, Fragment } from \"react\"\nimport cx from \"classnames\"\nimport { useStore } from \"../../../Storage/Store/StoreProvider\"\nimport { Sphere } from \"../Sphere/Sphere\"\nimport { Seat } from \"./Seat\"\nimport style from \"./Seats.module.css\"\n\nexport const Seats: FC = () => (\n    <>\n        {Object.entries(useStore().playersStore.players).map(([, player], index) => {\n            const playerClass = style[`p-${index + 1}`]\n\n            return (\n                <Fragment key={player.id}>\n                    <Seat\n                        playerClass={playerClass}\n                        playerId={player.id}\n                        stones={player.stones}\n                    />\n                    <div className={cx(style.item, playerClass)}>\n                        <Sphere color={player.id} />\n                    </div>\n                </Fragment>\n            )\n        })}\n    </>\n)\n","import { PlayerId } from \"../../../types\"\nimport { Store } from \"../Store\"\n\nexport const getGateway = (store: Store) => (position: number): PlayerId => (\n    store.playersStore.players[store.gates[position]].id\n)\n","import type { FC } from \"react\"\nimport cx from \"classnames\"\nimport { Sphere } from \"../Sphere/Sphere\"\nimport { useStore } from \"../../../Storage/Store/StoreProvider\"\nimport { getGateway } from \"../../../Storage/Store/applyers/getGateway\"\nimport style from \"./GatewaySeats.module.css\"\n\nexport const GatewaySeats: FC = () => {\n    const store = useStore()\n\n    return (\n        <>\n            {Object.entries(store.gates).map(([i]) => (\n                <div key={i} className={cx(style.item, style[`g-${i}`])}>\n                    <Sphere color={getGateway(store)(parseInt(i, 10))} alt />\n                </div>\n            ))}\n        </>\n    )\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { FC, useEffect } from \"react\"\nimport { KeyCodes } from \"./KeyCodes\"\n\ntype Dictionary<K extends string, T> = { [P in K]?: T }\n\ninterface KeyboardActionsProps {\n    actions: Dictionary<KeyCodes, () => void>\n}\n\nexport const KeyboardActions: FC<KeyboardActionsProps> = ({ actions }) => {\n    useEffect(() => {\n        const fn = (e: KeyboardEvent): void => {\n            actions[e.code as KeyCodes]?.()\n        }\n        window.addEventListener(\"keyup\", fn, true)\n\n        return () => {\n            window.removeEventListener(\"keyup\", fn, true)\n        }\n    }, [])\n\n    return null\n}\n","import { Store } from \"../Store\"\nimport { runInAction } from \"mobx\"\nimport { MouseEvent } from \"react\"\n\nexport const cancelPreSit = (store: Store) => (): void => {\n    runInAction(() => {\n        store.preSit = false\n    })\n}\n\nexport const cancelPreSitButton = (store: Store) => (e: MouseEvent<HTMLDivElement>): void => {\n    e.stopPropagation()\n    cancelPreSit(store)()\n}\n","import type { FC } from \"react\"\nimport { KeyboardActions } from \"../../Components/KeyboardActions/KeyboardActions\"\nimport { useStore } from \"../../../Storage/Store/StoreProvider\"\nimport { applySit } from \"../../../Storage/Store/applyers/applySit\"\nimport { rotateLeft, rotateRight } from \"../../../Storage/Store/applyers/rotate\"\nimport { cancelPreSit } from \"../../../Storage/Store/applyers/cancelPreSit\"\n\nconst useActions = () => {\n    const store = useStore()\n\n    return [\n        cancelPreSit(store),\n        rotateRight(store),\n        rotateLeft(store),\n        applySit(store),\n    ]\n}\n\nexport const KeyCode: FC = () => {\n    const [Escape, ArrowLeft, ArrowRight, Enter] = useActions()\n\n    return (\n        <KeyboardActions actions={{ Escape, ArrowLeft, ArrowRight, Space: ArrowRight, Enter, NumpadEnter: Enter }} />\n    )\n}\n","import { CSSProperties } from \"react\"\nimport { cssBgUrl } from \"./cssBgUrl\"\nimport svg from \"../../../assets/hex.svg\"\nimport { getPlayerMoveTile } from \"./playerMoveTile\"\nimport { Store } from \"../Store\"\n\nexport const tileHoveredCSS = (store: Store): CSSProperties => {\n    const playerMove = store.playerMove\n\n    return {\n        ...cssBgUrl([svg, \"#\", getPlayerMoveTile(store)].join(\"\")),\n        ...(playerMove.length >= 4 && playerMove[3] !== undefined ? {\n            transform: `rotate(${playerMove[3]}deg)`,\n        } : {}),\n        // transitionProperty: \"transform\",\n        // transitionDuration: \"calc(var(--duration) * 5)\",\n    }\n}\n","import { FC, useEffect, useRef } from \"react\"\nimport { observer } from \"mobx-react\"\nimport { useStore } from \"../../../Storage/Store/StoreProvider\"\nimport { KeyCode } from \"./KeyCode\"\nimport { tileHoveredCSS } from \"../../../Storage/Store/applyers/tileHoveredCSS\"\nimport styles from \"./TileHovered.module.css\"\n\nexport const TileHovered: FC = observer(() => {\n    const store = useStore()\n    const ref = useRef<null | HTMLDivElement>(null)\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (ref && ref.current) {\n                ref.current.className = store.hoveredId !== null ? styles.show : styles.hide\n            }\n        }, 10 /* TODO: 10? */)\n    }, [store.hoveredId])\n\n    return (\n        <>\n            <KeyCode />\n            <div data-qr={store.hoveredId} ref={ref}>\n                <div style={tileHoveredCSS(store)} />\n            </div>\n        </>\n    )\n})\n","import type { FC } from \"react\"\nimport { Stone } from \"../Stone/Stone\"\nimport { useStore } from \"../../../Storage/Store/StoreProvider\"\nimport { StoneId } from \"../../../types\"\n\nexport const Stones: FC = () => (\n    <>\n        {Object.entries(useStore().stones).map(([id]) => (\n            <Stone key={id} id={id as StoneId} />\n        ))}\n    </>\n)\n","import { CSSProperties } from \"react\"\nimport { toHex } from \"./toHex\"\nimport { Store } from \"../Store\"\n\nexport const tileActionsPositionCSS = (store: Store): CSSProperties => {\n    const [q, r] = (store.hoveredId || \"0,0\").split(\",\")\n    const { x, y } = store.layout.hexToPixel(toHex(parseInt(q, 10), parseInt(r, 10)))\n\n    return {\n        [\"--XX\" as string]: `${x}px`,\n        [\"--YY\" as string]: `${y}px`,\n    }\n}\n","import type { FC } from \"react\"\nimport { observer } from \"mobx-react\"\nimport { useStore } from \"../../../Storage/Store/StoreProvider\"\nimport { cancelPreSitButton } from \"../../../Storage/Store/applyers/cancelPreSit\"\nimport { tileActionsPositionCSS } from \"../../../Storage/Store/applyers/tileActionsPositionCSS\"\nimport styles from \"./TileActions.module.css\"\nimport { applySitButton } from \"../../../Storage/Store/applyers/applySit\"\nimport { rotateLeftButton, rotateRightButton } from \"../../../Storage/Store/applyers/rotate\"\n\nexport const TileActions: FC = observer(() => {\n    const store = useStore()\n\n    if (!store.preSit) {\n        return null\n    }\n\n    const isCrossroad = store.isRouteCrossroad\n\n    // window.matchMedia(\"\")\n\n    return (\n        <div className={styles.root} onClick={cancelPreSitButton(store)}>\n            <div className={styles.container} style={tileActionsPositionCSS(store)}>\n                <div className={styles.inner}>\n                    {!isCrossroad && (\n                        <button className={styles.left} onClick={rotateRightButton(store)} />\n                    )}\n                    <button className={styles.apply} onClick={applySitButton(store)} />\n                    <button className={styles.cancel} />\n                    {!isCrossroad && (\n                        <button className={styles.right} onClick={rotateLeftButton(store)} />\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n})\n","import { Store } from \"../Store\"\nimport { updateLayout } from \"./updateLayout\"\nimport { runInAction } from \"mobx\"\n\nexport const recalc = (store: Store): void => {\n    const widthSize = store.isPointy ? store.smallSide * 2 : store.largeSide * 2\n    const heightSize = store.isPointy ? store.largeSide * 2 : store.smallSide * 2\n    runInAction(() => {\n        store.R = Math.min(store.width / widthSize, store.height / heightSize)\n    })\n    updateLayout(store)\n}\n","import { Layout } from \"../../../jsx/Game/Hexagons/Layout\"\nimport { Point } from \"../../../jsx/Game/Hexagons/Point\"\nimport { Store } from \"../Store\"\nimport { runInAction } from \"mobx\"\n\nexport const updateLayout = (store: Store): void => {\n    runInAction(() => {\n        store.layout = new Layout(\n            store.orientation,\n            new Point(store.R, store.R),\n            new Point(\n                store.width / 2,\n                store.R * (store.isPointy ? store.largeSide : store.smallSide),\n            ),\n        )\n    })\n}\n","import { runInAction } from \"mobx\"\nimport { Layout } from \"../../../jsx/Game/Hexagons/Layout\"\nimport { recalc } from \"./recalc\"\nimport { Store } from \"../Store\"\n\nexport const changeOrientation = (store: Store) => (orientation: \"flat\" | \"pointy\") => () => {\n    runInAction(() => {\n        store.orientation = orientation === \"flat\" ? Layout.flat : Layout.pointy\n        const [width, height] = store.elSizes\n        store.width = width\n        store.height = height\n        recalc(store)\n    })\n}\n","import type { FC } from \"react\"\nimport { KeyboardActions } from \"../../Components/KeyboardActions/KeyboardActions\"\nimport { useStore } from \"../../../Storage/Store/StoreProvider\"\nimport { changeOrientation } from \"../../../Storage/Store/applyers/changeOrientation\"\n\nexport const Actions: FC = () => {\n    const store = useStore()\n\n    return (\n        <KeyboardActions actions={{\n            KeyR() {\n                changeOrientation(store)(store.isPointy ? \"flat\" : \"pointy\")()\n            },\n        }} />\n    )\n}\n","import { FC, useEffect, useRef } from \"react\"\nimport { createPortal } from \"react-dom\"\n\nconst root = document.getElementById(\"root\")\n\nexport const Modal: FC = ({ children }) => {\n    const el = useRef(document.createElement(\"div\"))\n\n    useEffect(() => {\n        const div = el.current\n        root?.appendChild(div)\n\n        return () => {\n            root?.removeChild(div)\n        }\n    }, [])\n\n    return createPortal(children, el.current)\n}\n","import { FC, ReactNode } from \"react\"\nimport styles from \"./Dialog.module.css\"\nimport { Modal } from \"../Modal/Modal\"\nimport { KeyboardActions } from \"../KeyboardActions/KeyboardActions\"\n\ninterface DialogProps {\n    heading?: string\n    close?(): void\n    footer?: ReactNode\n    noPadding?: true\n}\n\nexport const Dialog: FC<DialogProps> = ({\n    heading,\n    close,\n    children,\n    footer,\n    noPadding,\n}) => (\n    <Modal>\n        <KeyboardActions actions={{ Escape: close }} />\n        <div className={styles.backdrop} onClick={close} />\n        <div className={styles.root}>\n            {heading !== undefined && (\n                <h2 className={styles.header}>\n                    {heading}\n                    {close && (\n                        <button className={styles.closeButton} onClick={close} />\n                    )}\n                </h2>\n            )}\n            <section {...!noPadding && { className: styles.content }}>\n                {children}\n            </section>\n            {footer !== undefined && (\n                <footer className={styles.footer}>\n                    {footer}\n                </footer>\n            )}\n        </div>\n    </Modal>\n)\n","import type { FC } from \"react\"\nimport { observer } from \"mobx-react\"\nimport buttonStyles from \"../../../Components/Button/Button.module.css\"\nimport { i18n } from \"../../../../i18n/i18n\"\nimport { useUIStore } from \"../../../../Storage/UIStore/UIStoreProvider\"\n\nexport const RestartButton: FC = observer(() => (\n    <button className={buttonStyles.restart} onClick={useUIStore().restartGame}>\n        {i18n(\"button.restart\")}\n    </button>\n))\n","import { FC, useCallback, useState } from \"react\"\nimport { i18n } from \"../../../../i18n/i18n\"\nimport buttonStyles from \"../../../Components/Button/Button.module.css\"\nimport { Dialog } from \"../../../Components/Dialog/Dialog\"\nimport { RestartButton } from \"./RestartButton\"\n\nexport const RestartGame: FC = () => {\n    const [dialogVisible, setDialogVisible] = useState(false)\n    const close = useCallback(() => {\n        setDialogVisible(false)\n    }, [])\n\n    return (\n        <>\n            <button className={buttonStyles.restart} onClick={() => {\n                setDialogVisible(true)\n            }}>\n                {i18n(\"button.restart\")}\n            </button>\n            {dialogVisible && (\n                <Dialog\n                    heading={`${i18n(\"button.restartGame\")}?`}\n                    close={close}\n                    footer={\n                        <>\n                            <button className={buttonStyles.text} onClick={close}>\n                                {i18n(\"button.cancel\")}\n                            </button>\n                            <RestartButton />\n                        </>\n                    }\n                >\n                    <div style={{ textAlign: \"center\" }}>\n                        {i18n(\"currentGameWillBeLost\")}\n                    </div>\n                </Dialog>\n            )}\n        </>\n    )\n}\n\n","import type { FC } from \"react\"\nimport cx from \"classnames\"\nimport { observer } from \"mobx-react\"\nimport { useStore } from \"../../../Storage/Store/StoreProvider\"\nimport { Sphere } from \"../Sphere/Sphere\"\nimport { StoneC } from \"../Stone/Stone\"\nimport { calcScore } from \"../../../helpers/calcScore\"\nimport styles from \"./GameResults.module.css\"\nimport seatsStyles from \"../Seats/Seats.module.css\"\nimport { i18n } from \"../../../i18n/i18n\"\nimport { Dialog } from \"../../Components/Dialog/Dialog\"\nimport buttonStyles from \"../../Components/Button/Button.module.css\"\nimport { RestartGame } from \"../../Layout/Drawer/RestartGame/RestartGame\"\nimport { runInAction } from \"mobx\"\n\nexport const GameResults: FC = observer(() => {\n    const store = useStore()\n\n    if (store.winner === null || !store.gameResultsOpen) {\n        return null\n    }\n\n    const player = store.winner!\n\n    return (\n        <Dialog noPadding>\n            <div className={cx(styles.container, styles[player.id])}>\n                <h1>{i18n(\"result.text.h1\")}</h1>\n                <h2>{i18n(\"winner\")}</h2>\n\n                <div className={styles.wrap}>\n                    <div className={styles.sphereWrap}>\n                        <Sphere color={player.id} />\n                    </div>\n                    <div className={cx(seatsStyles.score, styles.score)}>\n                        {calcScore(player.stones)}\n                    </div>\n                    <div className={styles.stonesWrap}>\n                        {player.stones.map((stone) => (\n                            <StoneC key={stone} id={stone} className={styles.stone} />\n                        ))}\n                    </div>\n                </div>\n\n                <div className={styles.actions}>\n                    <button className={buttonStyles.text} onClick={() => {\n                        runInAction(() => {\n                            store.gameResultsOpen = false\n                        })\n                    }}>\n                        {i18n(\"button.viewBoard\")}\n                    </button>\n                    <RestartGame />\n                </div>\n\n                <div className={styles.othersWrap}>\n                    {store.playersStore.players.filter(({ id }) => id !== player.id).map(({ id, stones }) => (\n                        <div key={id}>\n                            <div className={styles.otherSphere}>\n                                <Sphere color={id} />\n                            </div>\n                            <div className={cx(seatsStyles.score, styles.score, styles.otherScore)}>\n                                {calcScore(stones)}\n                            </div>\n                            <div className={styles.otherStones}>\n                                {stones.map((stone) => (\n                                    <StoneC key={stone} id={stone} className={cx(styles.stone, styles.stoneAlt)} />\n                                ))}\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </Dialog>\n    )\n})\n","import type { FC } from \"react\"\nimport { ArenaWrapper } from \"./ArenaWrapper\"\nimport { Tiles } from \"../Tile/Tiles\"\nimport { Seats } from \"../Seats/Seats\"\nimport { GatewaySeats } from \"../GatewaySeats/GatewaySeats\"\nimport { TileHovered } from \"../Tile/TileHovered\"\nimport { Stones } from \"../Stones/Stones\"\nimport { TileActions } from \"../TileActions/TileActions\"\nimport { Actions } from \"./Actions\"\nimport { GameResults } from \"../GameResults/GameResults\"\n\nexport const Arena: FC = () => (\n    <ArenaWrapper>\n        <Actions />\n        <Tiles />\n        <Seats />\n        <GatewaySeats />\n        <Stones />\n        <TileHovered />\n        <TileActions />\n        <GameResults />\n    </ArenaWrapper>\n)\n","import type { FC } from \"react\"\nimport { observer } from \"mobx-react\"\nimport { UIPhase } from \"../../types\"\nimport { Intro } from \"../Rules/Intro\"\nimport { useUIStore } from \"../../Storage/UIStore/UIStoreProvider\"\nimport { PlayerManager } from \"../Players/PlayerManager\"\nimport { Arena } from \"./Arena/Arena\"\n\nconst Wrapper: FC = ({ children }) => {\n    return (\n        <div style={{\n            maxWidth: \"calc(var(--spacing) * 125)\",\n            margin: \"0 auto\",\n            padding: \"calc(var(--spacing) * 2)\"\n        }}>\n            {children}\n        </div>\n    )\n}\n\nexport const Indigo: FC = observer(() => {\n    switch (useUIStore().gamePhase.phase) {\n        case UIPhase.PRE_GAME:\n            return (\n                <Wrapper>\n                    <Intro />\n                </Wrapper>\n            )\n        case UIPhase.PLAYERS_SELECTION:\n            return (\n                <Wrapper>\n                    <PlayerManager />\n                </Wrapper>\n            )\n        case UIPhase.GAME:\n            return (\n                <Arena />\n            )\n        default:\n            return null\n    }\n})\n","import { recalc } from \"./recalc\"\nimport { Store } from \"../Store\"\nimport { runInAction } from \"mobx\"\n\ntype OnWindowResize = (store: Store) => () => void\n\nexport const onWindowResize: OnWindowResize = (store) => () => {\n    const [width, height] = store.elSizes\n    if (store.width !== width || store.height !== height) {\n        runInAction(() => {\n            store.width = width\n            store.height = height\n        })\n        recalc(store)\n    }\n}\n","import { TileName } from \"../../../types\"\nimport { shuffle } from \"../../../helpers/shuffle\"\n\nconst leftTilesInitialSet: Record<TileName, 6 | 14> = {\n    s: 6,\n    c: 6,\n    t: 14,\n    l: 14,\n    h: 14,\n}\n\nexport const generateLeftTiles = (): TileName[] =>\n    shuffle<TileName>(\n        [].concat.apply(\n            [] as any,\n            Object.entries<6 | 14>(leftTilesInitialSet).map(\n                ([name, count]) => (new Array(count)).fill(name),\n            ) as any,\n        ),\n    )\n","export const shuffle = <T>(array: T[]): T[] => {\n    let currentIndex = array.length\n    let temporaryValue\n    let randomIndex\n\n    while (0 !== currentIndex) {\n        randomIndex = Math.floor(Math.random() * currentIndex)\n        currentIndex -= 1\n        temporaryValue = array[currentIndex]\n        array[currentIndex] = array[randomIndex]\n        array[randomIndex] = temporaryValue\n    }\n\n    return array\n}\n","import { HexType, IAllTiles, TileItems, Tiles } from \"../../../types\"\nimport { toHex } from \"./toHex\"\n\nexport const generateTiles = (data: TileItems<IAllTiles>, type: HexType): Tiles => {\n    const res: Tiles = {}\n    data.forEach(([q, r, tile, stones]) => {\n        const hex = toHex(q, r)\n        res[hex.id] = {\n            hex,\n            type,\n            ...(tile !== undefined ? { tile } : {}),\n            ...(stones !== undefined && stones.length ? { stones } : {}),\n        }\n    })\n    return res\n}\n","import { StoneId, TileItems, TreasureTiles } from \"../../../types\"\n\nexport const treasures: TileItems<TreasureTiles> = [\n    /* 0 */ [4, 0, TreasureTiles[\"tr-t-l\"], [[StoneId.amber0, 3]]],\n    /* 1 */ [-4, 0, TreasureTiles[\"tr-b-r\"], [[StoneId.amber1, 0]]],\n    /* 2 */ [-4, 4, TreasureTiles[\"tr-t-r\"], [[StoneId.amber2, 1]]],\n    /* 3 */ [0, -4, TreasureTiles[\"tr-b\"], [[StoneId.amber3, 5]]],\n    /* 4 */ [0, 4, TreasureTiles[\"tr-t\"], [[StoneId.amber4, 2]]],\n    /* 5 */ [4, -4, TreasureTiles[\"tr-b-l\"], [[StoneId.amber5, 4]]],\n\n    [0, 0, TreasureTiles.center, []],\n]\n","import { RouteTiles, TileItems } from \"../../../types\"\n\nexport const routes: TileItems<RouteTiles> = [\n    [-4, 1], [-4, 2], [-4, 3],\n    [-3, -1], [-3, 0], [-3, 1], [-3, 2], [-3, 3], [-3, 4],\n    [-2, -2], [-2, -1], [-2, 0], [-2, 1], [-2, 2], [-2, 3], [-2, 4],\n    [-1, -3], [-1, -2], [-1, -1], [-1, 0], [-1, 1], [-1, 2], [-1, 3], [-1, 4],\n    [0, -3], [0, -2], [0, -1], [0, 1], [0, 2], [0, 3],\n    [1, -4], [1, -3], [1, -2], [1, -1], [1, 0], [1, 1], [1, 2], [1, 3],\n    [2, -4], [2, -3], [2, -2], [2, -1], [2, 0], [2, 1], [2, 2],\n    [3, -3], [3, -4], [3, -2], [3, -1], [3, 0], [3, 1],\n    [4, -3], [4, -2], [4, -1],\n]\n","import { Stone, StoneType } from \"../../../types\"\nimport { treasures } from \"../defaults/treasures\"\n\nexport const getStoneProps = (treasureIndex: number, type: StoneType): Stone => {\n    const [q, r, , stoneWithEdge] = treasures[treasureIndex]\n    const [[, edge]] = stoneWithEdge!\n    return [type, q, r, edge]\n}\n","import { StoneId, Stones, StoneType } from \"../../../types\"\nimport { getStoneProps } from \"../applyers/getStoneProps\"\n\nexport const stones: Stones = {\n    [StoneId.sapphire]: [StoneType.sapphire, 0, 0, 0],\n\n    [StoneId.emerald0]: [StoneType.emerald, 0, 0, 5],\n    [StoneId.emerald1]: [StoneType.emerald, 0, 0, 1],\n    [StoneId.emerald2]: [StoneType.emerald, 0, 0, 2],\n    [StoneId.emerald3]: [StoneType.emerald, 0, 0, 3],\n    [StoneId.emerald4]: [StoneType.emerald, 0, 0, 4],\n\n    [StoneId.amber0]: getStoneProps(0, StoneType.amber),\n    [StoneId.amber1]: getStoneProps(1, StoneType.amber),\n    [StoneId.amber2]: getStoneProps(2, StoneType.amber),\n    [StoneId.amber3]: getStoneProps(3, StoneType.amber),\n    [StoneId.amber4]: getStoneProps(4, StoneType.amber),\n    [StoneId.amber5]: getStoneProps(5, StoneType.amber),\n}\n","import { GatewayTiles, TileItems } from \"../../../types\"\n\nexport const gateways: TileItems<GatewayTiles> = [\n\n    // -\n    [-4, -1, GatewayTiles[\"le-r-t\"]],\n    [-3, -2, GatewayTiles[\"g-t-l\"]],\n    [-2, -3, GatewayTiles[\"g-t-l\"]],\n    [-1, -4, GatewayTiles[\"le-t\"]],\n\n    // -\n    [1, -5, GatewayTiles[\"le-t\"]],\n    [2, -5, GatewayTiles[\"g-t-r\"]],\n    [3, -5, GatewayTiles[\"g-t-r\"]],\n    [4, -5, GatewayTiles[\"le-l-t\"]],\n\n    // -\n    [5, -4, GatewayTiles[\"le-l-t\"]],\n    [5, -3, GatewayTiles[\"g-r\"]],\n    [5, -2, GatewayTiles[\"g-r\"]],\n    [5, -1, GatewayTiles[\"le-l-b\"]],\n\n    // -\n    [-5, 1, GatewayTiles[\"le-r-t\"]],\n    [-5, 2, GatewayTiles[\"g-l\"]],\n    [-5, 3, GatewayTiles[\"g-l\"]],\n    [-5, 4, GatewayTiles[\"le-r-b\"]],\n\n    // -\n    [4, 1, GatewayTiles[\"le-l-b\"]],\n    [3, 2, GatewayTiles[\"g-b-r\"]],\n    [2, 3, GatewayTiles[\"g-b-r\"]],\n    [1, 4, GatewayTiles[\"le-b\"]],\n\n    // -\n    [-4, 5, GatewayTiles[\"le-r-b\"]],\n    [-3, 5, GatewayTiles[\"g-b-l\"]],\n    [-2, 5, GatewayTiles[\"g-b-l\"]],\n    [-1, 5, GatewayTiles[\"le-b\"]],\n]\n","import { Store } from \"../Store\"\nimport {\n    HexType,\n    OrientationType,\n    PlayerMove,\n    RouteTiles,\n    Stones,\n    TileItems,\n    TileName,\n    TreasureTiles,\n} from \"../../../types\"\nimport { generateLeftTiles } from \"./generateLeftTiles\"\nimport { getRandomTile } from \"./getRandomTile\"\nimport { Layout } from \"../../../jsx/Game/Hexagons/Layout\"\nimport { generateTiles } from \"./generateTiles\"\nimport { treasures } from \"../defaults/treasures\"\nimport { routes } from \"../defaults/routes\"\nimport { stones } from \"../defaults/stones\"\nimport { gateways } from \"../constants/gateways\"\n\nexport const init = (store: Store) => {\n    store.leftTiles = store.storage.getOrApply<TileName[]>(\"tiles-left\", generateLeftTiles)\n\n    store.playerMove = store.storage.getOrApply<PlayerMove>(\n        \"player-move\",\n        () => {\n            const [tile, angle] = getRandomTile(store)\n            return [store.playersStore.players[0].id, tile, angle]\n        },\n    )\n\n    store.orientation = Layout[store.storage.getOrApply<OrientationType>(\"orientation\", () => \"flat\")]\n\n    store.stones = store.storage.getOrApply<Stones>(\"stones\", () => stones)\n\n    store.tiles = {\n        ...generateTiles(gateways, HexType.gateway),\n        ...generateTiles(\n            store.storage.getOrApply<TileItems<TreasureTiles>>(\"treasure-tiles\", () => treasures),\n            HexType.treasure,\n        ),\n        ...generateTiles(\n            store.storage.getOrApply<TileItems<RouteTiles>>(\"route-tiles\", () => routes),\n            HexType.route,\n        ),\n    }\n}\n","export const gates: Record<number, Record<number, number>> = {\n    2: { 1: 0, 2: 0, 3: 1, 4: 1, 5: 0, 6: 0, 7: 1, 8: 1, 9: 0, 10: 0, 11: 1, 12: 1 },\n    3: { 1: 0, 2: 0, 3: 0, 4: 1, 5: 2, 6: 2, 7: 2, 8: 0, 9: 1, 10: 1, 11: 1, 12: 2 },\n    4: { 1: 0, 2: 1, 3: 1, 4: 2, 5: 0, 6: 3, 7: 3, 8: 1, 9: 2, 10: 0, 11: 2, 12: 3 },\n}\n","import { makeAutoObservable, reaction } from \"mobx\"\nimport { Layout } from \"../../jsx/Game/Hexagons/Layout\"\nimport { Point } from \"../../jsx/Game/Hexagons/Point\"\nimport { Keys, OrientationType, Player, PlayerMove, Stones, TileName, Tiles, UIPhase, Values } from \"../../types\"\nimport { debounce } from \"../../helpers/debounce\"\nimport { LocalStorageMgmnt } from \"../LocalStorageMgmnt\"\nimport { PlayersStore } from \"../PlayersStore/PlayersStore\"\nimport { Orientation } from \"../../jsx/Game/Hexagons/Orientation\"\nimport { onWindowResize } from \"./applyers/onWindowResize\"\nimport { init } from \"./applyers/init\"\nimport { stones } from \"./defaults/stones\"\nimport { gates } from \"./constants/gates\"\n\nexport class Store {\n\n    readonly ratio = 0.8660254\n\n    readonly largeSide = 9\n\n    readonly smallSide = 9 * this.ratio\n\n    width = 0\n\n    height = 0\n\n    R = 0\n\n    preSit = false\n\n    hoveredId: string | null = null\n\n    constructor() {\n        init(this)\n        makeAutoObservable<Store,\n            | \"ratio\"\n            | \"largeSide\"\n            | \"smallSide\"\n            | \"storage\">(this, { ratio: false, largeSide: false, smallSide: false, storage: false })\n\n        // if (process.env.NODE_ENV === 'development') {\n        //   new __DEV__appendStyles(this.smallSide, this.largeSide, this.ratio, this.tiles)\n        // }\n\n        this.playerMoveReaction()\n        reaction(() => this._playerMove, this.playerMoveReaction)\n    }\n\n    storage = new LocalStorageMgmnt<Keys, Values>(\"game\")\n\n    playersStore: PlayersStore = new PlayersStore(this.storage)\n\n    leftTiles: TileName[] = []\n\n    stones: Stones = stones\n\n    tiles: Tiles = {}\n\n    layout: Layout = new Layout(this.orientation, new Point(0, 0), new Point(0, 0))\n\n    gameResultsOpen: boolean = true\n\n    dispose = (): void => {\n        try {\n            window.removeEventListener(\"resize\", this.debounce)\n            this.storage.destroy()\n            this.playersStore.dispose()\n            init(this)\n        } catch (e) {\n            console.warn(\"%cTODO\", \"font-size:50px;\", e)\n        }\n    }\n\n    private _playerMove: PlayerMove = [this.playersStore.players[0].id]\n\n    get playerMove() {\n        return this._playerMove\n    }\n\n    set playerMove(move: PlayerMove) {\n        this._playerMove = move\n        this.storage.set(\"player-move\", this.playerMove)\n    }\n\n    playerMoveReaction = () => {\n        /**\n         * TODO FIXME\n         */\n\n        try {\n            const str = localStorage.getItem(\"ui\")\n            if (str) {\n                const ui = JSON.parse(str)\n\n                if (ui.phase === UIPhase.GAME) {\n                    document.body.classList.remove(...document.body.classList)\n                    document.body.classList.add(this.playerMove[0])\n                }\n            }\n\n        } catch (e) {\n\n        }\n    }\n\n    private _arenaElement: HTMLDivElement | null = null\n\n    get arenaElement() {\n        return this._arenaElement\n    }\n\n    set arenaElement(el) {\n        this._arenaElement = el\n        onWindowResize(this)()\n        window.addEventListener(\"resize\", this.debounce, false)\n    }\n\n    get elSizes() {\n        const arenaElement = this.arenaElement\n\n        if (arenaElement) {\n            return [arenaElement.offsetWidth, arenaElement.offsetHeight]\n        }\n\n        return [0, 0]\n    }\n\n    debounce = debounce(onWindowResize(this), 400)\n\n    private _orientation: Orientation = Layout.flat\n\n    get orientation() {\n        return this._orientation\n    }\n\n    set orientation(orientation) {\n        this._orientation = orientation\n        this.storage.set(\"orientation\", this.orientationType)\n    }\n\n    get orientationType(): OrientationType {\n        return this.isPointy ? \"pointy\" : \"flat\"\n    }\n\n    get isPointy() {\n        return this.orientation.start_angle === 0.5\n    }\n\n    get isRouteCrossroad() {\n        return this.playerMove[1] === \"c\"\n    }\n\n    get gates(): Record<number, number> {\n        return gates[this.playersStore.players.length]\n    }\n\n    get winner(): Player | null {\n        if (Object.values(this.stones).filter(([, , , , isOut]) => !isOut).length) {\n            return null\n        }\n        return this.playersStore.leadingPlayer\n    }\n}\n","export const debounce = function (func: any, wait: any) {\n    let timeout: any\n\n    return function (...args: any[]) {\n        // @ts-ignore\n        const context = this\n        const later = function () {\n            timeout = null\n            func.apply(context, args)\n        }\n\n        clearTimeout(timeout)\n        timeout = setTimeout(later, wait)\n    }\n}\n","import type { FC } from \"react\"\nimport { observer } from \"mobx-react\"\nimport { useStore } from \"../../../Storage/Store/StoreProvider\"\nimport styles from \"./LayoutWrapper.module.css\"\n\nexport const LayoutWrapper: FC = observer(({ children }) => (\n    <div className={styles.root} style={{ [\"--R\" as string]: `${useStore().R}px` }}>\n        {children}\n    </div>\n))\n","import { FC, useCallback, useEffect, useState } from \"react\"\nimport styles from \"./GamesSwitcher.module.css\"\nimport cx from \"classnames\"\nimport { i18n } from \"../../../../i18n/i18n\"\n\nexport const GamesSwitcher: FC = () => {\n    const [visible, setVisible] = useState(false)\n    const open = useCallback(() => {\n        setVisible(true)\n    }, [])\n    const close = useCallback(() => {\n        setVisible(false)\n    }, [])\n\n    useEffect(() => {\n        if (visible) {\n            document.addEventListener(\"click\", close)\n        } else {\n            document.removeEventListener(\"click\", close)\n        }\n    }, [visible, close])\n\n    return (\n        <div className={styles.root}>\n            <h1 className={styles.heading} onClick={open}>\n                {i18n('indigo')}\n            </h1>\n            <ul className={cx(styles.list, { [styles.visible]: visible })}>\n                <li className={styles.selected}>{i18n('indigo')}</li>\n                <li onClick={() => {\n                    // @ts-ignore\n                    window.location = \"https://bnz.github.io/yacht/\"\n                }}>{i18n('yacht')}</li>\n            </ul>\n        </div>\n    )\n}\n","import type { FC } from \"react\"\nimport { observer } from \"mobx-react\"\nimport { useUIStore } from \"../../../../Storage/UIStore/UIStoreProvider\"\nimport styles from \"./LanguageSwitcher.module.css\"\n\nexport const LanguageSwitcher: FC = observer(() => {\n    const store = useUIStore()\n    const lang = store.language\n\n    return (\n        <div className={styles.root}>\n            <button disabled={lang === \"rus\"} onClick={store.setLanguage(\"rus\")}>\n                рус\n            </button>\n            <button disabled={lang === \"eng\"} onClick={store.setLanguage(\"eng\")}>\n                eng\n            </button>\n        </div>\n    )\n})\n","import type { FC } from \"react\"\nimport styles from \"./Footer.module.css\"\n\nexport const Footer: FC = () => (\n    <footer className={styles.footer}>\n        bonez &copy; 2020 - {new Date().getFullYear()}\n    </footer>\n)\n","import type { FC } from \"react\"\nimport { observer } from \"mobx-react\"\nimport styles from \"./ThemeSwitcher.module.css\"\nimport { useUIStore } from \"../../../../Storage/UIStore/UIStoreProvider\"\nimport cx from \"classnames\"\nimport { Theme } from \"../../../../Storage/UIStore/UIStore\"\n\nexport const ThemeSwitcher: FC = observer(() => {\n    const store = useUIStore()\n    const theme = store.theme\n    const fn = (th: Theme) => cx(styles[th], { [styles.selected]: theme === th })\n\n    return (\n        <div className={styles.wrapper}>\n            <input\n                type=\"radio\"\n                className={fn(\"light\")}\n                onClick={store.changeTheme(\"light\")}\n            />\n            <input\n                type=\"radio\"\n                className={fn(\"dark\")}\n                onClick={store.changeTheme(\"dark\")}\n            />\n            <input\n                type=\"radio\"\n                className={fn(\"system\")}\n                onClick={store.changeTheme(\"system\")}\n            />\n            {/*\n            <label className={styles.checkboxLabel}>\n                <h5>{i18n(\"systemTheme\")}</h5>\n                <input\n                    type=\"checkbox\"\n                    className={styles.checkbox}\n                    checked={themeSystem}\n                    onChange={store.useSystemTheme}\n                />\n            </label>\n            */}\n        </div>\n    )\n})\n","import type { FC } from \"react\"\nimport styles from \"./RotateLayout.module.css\"\nimport { observer } from \"mobx-react\"\nimport { useStore } from \"../../../../Storage/Store/StoreProvider\"\nimport { changeOrientation } from \"../../../../Storage/Store/applyers/changeOrientation\"\n\nexport const RotateLayout: FC = observer(() => {\n    const store = useStore()\n    const isPointy = store.isPointy\n\n    return (\n        <div className={styles.wrap}>\n            <button\n                disabled={!isPointy}\n                className={styles.flat}\n                onClick={changeOrientation(store)(\"flat\")}\n            />\n            <button\n                disabled={isPointy}\n                className={styles.pointy}\n                onClick={changeOrientation(store)(\"pointy\")}\n            />\n        </div>\n    )\n})\n","import { TileName } from \"../../../types\"\nimport { Store } from \"../Store\"\n\nexport const tileCountByName = (store: Store, tileName: TileName): number => (\n    store.leftTiles.filter((name) => name === tileName).length\n)\n","import type { FC } from \"react\"\nimport styles from \"./Rules.module.css\"\nimport { RouteTiles, StoneId } from \"../../types\"\nimport { Stone } from \"../Game/Stone/Stone\"\nimport { i18n } from \"../../i18n/i18n\"\nimport buttonStyles from \"../Components/Button/Button.module.css\"\nimport { useUIStore } from \"../../Storage/UIStore/UIStoreProvider\"\nimport { Tile } from \"../Game/Tile/Tile\"\nimport { observer } from \"mobx-react\"\nimport { useStore } from \"../../Storage/Store/StoreProvider\"\nimport { tileCountByName } from \"../../Storage/Store/applyers/tileCountByName\"\n\nexport const Rules: FC = observer(() => {\n    const store = useStore()\n\n    return (\n        <div className={styles.root}>\n\n            <div className={styles.stonesGrid}>\n                <Stone id={StoneId.sapphire} isStatic />\n                <div>\n                    <span>Синий сапфир</span>\n                    <span>приносит <b>3</b> очка</span>\n                </div>\n                <Stone id={StoneId.emerald0} isStatic />\n                <div>\n                    <span>Зелёный изумруд</span>\n                    <span>приносит <b>2</b> очка</span>\n                </div>\n                <Stone id={StoneId.amber0} isStatic />\n                <div>\n                    <span>жёлтый янтарь</span>\n                    <span>приносит <b>1</b> очко</span>\n                </div>\n            </div>\n\n            <div className={styles.tilesGrid}>\n                <Tile data={{ qr: \"0,0\", tile: RouteTiles.c }} />\n                <div>{tileCountByName(store, \"c\")}/6</div>\n                <Tile data={{ qr: \"0,0\", tile: RouteTiles[\"s-0\"] }} />\n                <div>{tileCountByName(store, \"s\")}/6</div>\n                <Tile data={{ qr: \"0,0\", tile: RouteTiles[\"t-120\"] }} />\n                <div>{tileCountByName(store, \"t\")}/14</div>\n                <Tile data={{ qr: \"0,0\", tile: RouteTiles[\"l-60\"] }} />\n                <div>{tileCountByName(store, \"l\")}/14</div>\n                <Tile data={{ qr: \"0,0\", tile: RouteTiles[\"h-300\"] }} />\n                <div>{tileCountByName(store, \"h\")}/14</div>\n            </div>\n\n            <h3>Замысел и цель игры</h3>\n            <p>\n                В игре «Индиго» задача игроков – собрать наиболее ценные камни. Для этого им предстоит прокладывать\n                пути, по которым камни будут двигаться к выходам, ведущим к воротам игроков, расположенным по краям\n                игрового поля. Одни и те же ворота могут принадлежать только одному или двум игрокам сразу. В первом\n                случае только один игрок получит добытый камень, а во втором – оба игрока будут вознаграждены,\n                независимо от того, кто именно занес камень в ворота!\n            </p>\n\n            <h3>Игровой процесс</h3>\n            <p>\n                Левый верхний игрок начинает игру. Затем игра идёт по часовой стрелке. Действующий игрок кладёт плитку\n                на\n                поле, затем драгоценный камень перемещается и иногда игрок получает его. После этого происходит переход\n                хода.\n            </p>\n\n            <h3>Размещение плитки</h3>\n            <p>\n                Игрок размещает свою плитку на любой свободный гекс игрового поля. Плитку можно положить отдельно от\n                других\n                плиток или так, чтобы она примыкала к уже находящимся на поле плиткам\n                <span style={{ display: \"block\" }}>(Рис. 1).</span>\n            </p>\n            <p style={{ fontStyle: \"italic\" }}>\n                <b>Исключение:</b> Не разрешается блокировать два выхода ворот, размещая плитку так, чтобы кривая\n                дорожка\n                упиралась сразу в два выхода\n                <span style={{ display: \"block\" }}>(Рис. 2).</span>\n            </p>\n\n            <h3>Перемещение камней</h3>\n            <p>\n                Если драгоценный камень примыкает к дороге на только что выложенной плитке, он перемещается:\n                <span style={{ display: \"block\" }}>(Рис. 3)</span>\n                <span style={{ display: \"block\" }}>(Рис. 4)</span>\n            </p>\n\n            <h3>Плитка сокровищ</h3>\n            <p>\n                Если только что выложенная плитка примыкает своей стороной к плитке сокровищ, в месте отмеченном\n                стрелкой,\n                то находящийся там камень перемещается в направлении стрелки до конца образовавшегося пути. В случае с\n                голубыми плитками сокровищ – перемещается жёлтый янтарь\n                <span style={{ display: \"block\" }}>(Рис. 3).</span>\n                В случае с синей центральной плиткой сокровищь, в первую очередь перемещаются зелёные изумруды – до тех\n                пор,\n                пока синий сапфир не останется в одиночестве\n                <span style={{ display: \"block\" }}>(Рис. 4).</span>\n                Сапфир всегда перемещается последним (по стандартным правилам перемещения камней).\n            </p>\n\n            <h3>Путевые плитки</h3>\n            <p>\n                Если только что выложенная плитка продлевает дорожку, на которой находится драгоценный камень (Рис. 5),\n                камень перемещается до конца образовавшейся дорожки (Рис. 6). Камень всегда должен перемещаться по одной\n                дороге: он не может делать резких поворотов или двигаться в обратном направлении. Если с только что\n                выложенной плиткой граничат несколько камней, необходимо переместить их все (Рис. 7).\n            </p>\n\n            <p style={{ fontStyle: \"italic\" }}>\n                <b>Примечание:</b> Если два камня сталкиваются на одной дорожке, они выбывают из игры (Рис. 8).\n            </p>\n\n            <h3>Получение камней</h3>\n            <p>\n                Если камень перемещается за край игрового поля, он достается игроку, в чьи ворота он попадает (Рис. 9).\n                Если\n                ворота принадлежат двум игрокам, второй игрок тоже получает камень (того же цвета) (Рис. 10).\n            </p>\n            <p>\n                <b>Комментарий:</b> Если ворота принадлежат двум игрокам, они в равно мере владеют <b>всеми</b> 6\n                выходами\n                этих ворот. Независимо от того, через какой из выходов попадает камень, оба игрока получают по камню.\n                Если\n                ворота принадлежат только одному игроку, то и камень получит только он один.\n            </p>\n\n            <h3>Конец игры</h3>\n            <p>\n                Как только на поле не остаётся драгоценных камней, игра заканчивается.\n            </p>\n            <p>\n                Игрок, набравший больше всех очков, становится победителем. В случае ничьи выигрывает тот претендент на\n                победу, у которого больше камней. Если результат игроков снова равный, победа присуждается сразу\n                нескольким\n                игрокам.\n            </p>\n\n            <div style={{\n                textAlign: \"right\",\n                marginTop: \"calc(var(--spacing) * 5)\",\n                marginBottom: \"calc(var(--spacing) * 20)\",\n            }}>\n                <button className={buttonStyles.button} onClick={useUIStore().closeDrawer}>\n                    {i18n(\"button.close\")}\n                </button>\n            </div>\n\n        </div>\n    )\n})\n","import type { FC } from \"react\"\nimport cx from \"classnames\"\nimport { observer } from \"mobx-react\"\nimport styles from \"./Drawer.module.css\"\nimport { useUIStore } from \"../../../Storage/UIStore/UIStoreProvider\"\nimport { GamesSwitcher } from \"./GamesSwitcher/GamesSwitcher\"\nimport { LanguageSwitcher } from \"./LanguageSwitcher/LanguageSwitcher\"\nimport { Footer } from \"./Footer/Footer\"\nimport { ThemeSwitcher } from \"./ThemeSwitcher/ThemeSwitcher\"\nimport { UIPhase } from \"../../../types\"\nimport { RestartGame } from \"./RestartGame/RestartGame\"\nimport { RotateLayout } from \"./RotateLayout/RotateLayout\"\nimport { KeyboardActions } from \"../../Components/KeyboardActions/KeyboardActions\"\nimport { Rules } from \"../../Rules/Rules\"\n\nexport const Drawer: FC = observer(() => {\n    const store = useUIStore()\n\n    return (\n        <div className={cx({ [styles.hidden]: !store.drawer })}>\n            <KeyboardActions actions={{ Escape: store.toggleDrawer }} />\n            <div className={styles.backdrop} onClick={store.toggleDrawer} />\n            <div className={styles.rulesContainer}>\n                <Rules />\n            </div>\n            <div className={styles.drawer}>\n                <GamesSwitcher />\n                <div className={styles.content}>\n                    <LanguageSwitcher />\n                    <ThemeSwitcher />\n                    {store.gamePhase.phase === UIPhase.GAME && (\n                        <>\n                            <div className={styles.actions}>\n                                <RestartGame />\n                            </div>\n                            <RotateLayout />\n                        </>\n                    )}\n                </div>\n                <Footer />\n            </div>\n        </div>\n    )\n})\n","import type { FC } from \"react\"\nimport { observer } from \"mobx-react\"\nimport styles from \"./MenuButton.module.css\"\nimport { useUIStore } from \"../../../Storage/UIStore/UIStoreProvider\"\n\nexport const MenuButton: FC = observer(() => {\n    const store = useUIStore()\n\n    return (\n        <button\n            className={store.drawer ? styles.closeMenu : styles.openMenu}\n            onClick={store.toggleDrawer}\n        />\n    )\n})\n","import { StrictMode } from \"react\"\nimport { render } from \"react-dom\"\nimport \"modern-css-reset\"\nimport \"@fontsource/roboto\"\nimport \"./:root.css\"\nimport \"./index.css\"\nimport { UIStore } from \"./Storage/UIStore/UIStore\"\nimport { Indigo } from \"./jsx/Game/Indigo\"\nimport { UIStoreProvider } from \"./Storage/UIStore/UIStoreProvider\"\nimport { Store } from \"./Storage/Store/Store\"\nimport { StoreProvider } from \"./Storage/Store/StoreProvider\"\nimport { LayoutWrapper } from \"./jsx/Layout/LayoutWrapper/LayoutWrapper\"\nimport { Drawer } from \"./jsx/Layout/Drawer/Drawer\"\nimport { MenuButton } from \"./jsx/Layout/MenuButton/MenuButton\"\n\nconst store = new Store()\n\nrender(\n    <StrictMode>\n        <UIStoreProvider store={new UIStore(store.dispose)}>\n            <StoreProvider store={store}>\n                <LayoutWrapper>\n                    <Indigo />\n                </LayoutWrapper>\n                <Drawer />\n                <MenuButton />\n            </StoreProvider>\n        </UIStoreProvider>\n    </StrictMode>,\n    document.getElementById(\"root\"),\n)\n"],"sourceRoot":""}